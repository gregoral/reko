void fn0000000000015180(word64 ra, word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 a7, word64 s5, word64 s11, word64 fa3, word64 fa4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] a7:[0..63] fa3:[0..63] fa4:[0..63] gp:[0..63] ra:[0..63] s11:[0..63] s5:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t1 t3
// Preserved: sp
fn0000000000015180_entry:
	word64 qwLoc01A8
	char * ptrLoc01A0
	struct timespec tLoc0198
	struct <anonymous> tLoc0188
	word64 qwLocC0
	char bLocB8
	word64 qwLoc0190
l0000000000015180:
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	Mem41[&qwLoc01A8 + 4<i64>:word32] = 0<32>
	word64 s0_126 = 0<i64>
l0000000000015200:
	word64 a0_60 = CONVERT(getopt_long(SLICE(a0, int32, 0), a1, 0x119A8<64>, 0x108E0<64>, 0<i64>), int32, uint64)
	branch a0_60 == -1<i64> l0000000000015348
l0000000000015348:
	word64 s1_139
	word64 s4_329
	word64 a4_65 = CONVERT(Mem50[gp + -1904<i64>:int32], int32, int64)
	branch a4_65 >= a0 l0000000000015428
l0000000000015428:
	s4_329 = 0<i64>
	s1_139 = 0<i64>
l0000000000015350:
	word64 a1_68 = CONVERT(CONVERT(a4_65, word64, word32) + 1<i32>, word32, int64)
	Mem71[gp + 2192<i64>:word32] = SLICE(a1_68, word32, 0)
	word64 s2_70 = a1 + (a4_65 << 3<u32>)
	s1_139 = Mem71[s2_70:word64]
	s4_329 = 0<i64>
	branch a1_68 >= a0 l0000000000015378
l000000000001536C:
	s4_329 = Mem71[s2_70 + 8<i64>:word64]
	Mem76[gp + 2192<i64>:word32] = CONVERT(a4_65, word64, word32) + 2<i32>
l0000000000015378:
	branch false l0000000000015588
l0000000000015588:
	__printf_chk(1<i32>, 0x119C8<64>, a2)
l000000000001537C:
	branch CONVERT(Mem88[&qwLoc01A8 + 4<i64>:int32], int32, int64) == 0<64> l00000000000153B4
l0000000000015384:
	branch true l00000000000153B4
l00000000000153B4:
	word64 a6_106
	word64 a4_530
	word64 a0_527
	word64 a4_322
	word64 a5_338
	word64 a0_174
	word64 a0_337
	word64 a5_257
	word64 s2_121
	branch true l0000000000015924
l0000000000015924:
	word64 a1_2725
	word64 a2_2726
	word64 a3_2727
	word64 a4_2728
	branch fn0000000000017924(gp, a0_60, out a1_2725, out a2_2726, out a3_2727, out a4_2728, out a6_106) != 0<64> l0000000000015458
l0000000000015930:
	branch true l0000000000015458
l0000000000015940:
l00000000000153BC:
	s2_121 = 2<i64>
	word64 a1_2729
	word64 a4_2732
	word64 a2_2730
	word64 a3_2731
	branch fn0000000000017924(gp, a0_60, out a1_2729, out a2_2730, out a3_2731, out a4_2732, out a6_106) == 0<64> l0000000000015434
l0000000000015434:
	branch true l00000000000153CC
l0000000000015444:
	s0_126 = 2<i64>
l0000000000015448:
	s2_121 = s0_126 | 0x4000<64>
	branch false l00000000000153CC
l0000000000015454:
	s0_126 = s2_121
l0000000000015458:
	a5_257 = a0_60
	branch true l0000000000015CE4
l0000000000015CE4:
	branch s1_139 != 0<64> l0000000000015510
l0000000000015CE8:
	branch CONVERT(Mem94[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l0000000000015CF0:
	fwrite(0x11A30<64>, SLICE(1<i64>, size_t, 0), SLICE(28<i64>, size_t, 0), Mem94[gp + -1920<i64>:word64])
	fn0000000000015FCC(gp, 1<i64>)
l000000000001545C:
	word64 a0_165 = fn00000000000166F4(gp, &qwLoc01A8 + 4<i64>, 0<i64>, 1<i64>)
	branch a0_165 < 0<64> l0000000000015BC8
l0000000000015BC8:
	branch CONVERT(Mem94[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l0000000000015BD0:
	a0_174 = Mem94[gp + -1920<i64>:word64]
	branch CONVERT(Mem94[&qwLoc01A8 + 4<i64>:int32], int32, int64) != 0<64> l0000000000015E7C
l0000000000015E7C:
l0000000000015BDC:
l0000000000015474:
	word64 s1_184 = CONVERT(Mem183[&qwLoc01A8 + 4<i64>:int32], int32, int64)
	Mem185[&ptrLoc01A0:word64] = 0<64>
	branch CONVERT(clock_gettime(2<i32>, &tLoc0198), int32, uint64) < 0<64> l0000000000015CB0
l0000000000015494:
	branch s1_184 == 0<64> l0000000000015C48
l0000000000015C48:
	branch fn00000000000164D0(&qwLocC0, 4<i64>) < 0<64> l0000000000015CB0
l0000000000015C64:
	branch a0_165 <= 15<i64> l0000000000015C7C
l0000000000015C6C:
	branch (qwLoc0190 | 4<i64>) <=u 1<i64> l0000000000015DB8
l0000000000015DB8:
	branch (qwLoc0190 | 4<i64>) == 1<i64> l0000000000015E00
l0000000000015E00:
	Mem201[&qwLocC0:byte] = 0xC0<8>
	Mem203[&qwLocC0 + 1<i64>:byte] = 0xA8<8>
l0000000000015DBC:
	Mem205[&qwLocC0:byte] = 0xAC<8>
	Mem210[&qwLocC0 + 1<i64>:byte] = SLICE(qwLoc0190 >> 4<u32>, byte, 0) & 0xF<8> | 0x10<8>
l0000000000015C7C:
	Mem213[&qwLocC0:byte] = 0xA<8>
l0000000000015C84:
	Mem225[&qwLoc01A8:word32] = Mem215[&qwLocC0:int32]
	branch inet_ntop(2<i32>, &qwLoc01A8, &bLocB8, 64<i32>) != 0<64> l00000000000154DC
l0000000000015498:
	Mem233[&tLoc0188:byte] = SLICE(qwLoc0190, byte, 0) & 1<8> | 0xFC<8>
	branch fn00000000000164D0(&tLoc0188 + 1<i64>, 15<i64>) < 0<64> l0000000000015CB0
l00000000000154BC:
	branch inet_ntop(10<i32>, &tLoc0188, &bLocB8, 64<i32>) == 0<64> l0000000000015CB0
l00000000000154DC:
	a5_257 = a0_165
	branch CONVERT(__asprintf_chk(&ptrLoc01A0, 1<i32>, 0x11A90<64>, a3, SLICE(a4, uint32, 0)), int32, uint64) == -1<i64> l0000000000015CB0
l0000000000015508:
	s1_139 = Mem254[&ptrLoc01A0:word64]
	branch s1_139 == 0<64> l0000000000015CB0
l0000000000015CB0:
	branch CONVERT(Mem263[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l0000000000015CB8:
	__fprintf_chk(Mem263[gp + -1920<i64>:word64], 1<i32>, 0x11A98<64>, SLICE(a3, uint32, 0))
l00000000000153CC:
	branch true l00000000000155A8
l00000000000155A8:
	branch CONVERT(Mem94[&qwLoc01A8 + 4<i64>:int32], int32, int64) != 0<64> l0000000000015944
l0000000000015944:
	word64 a0_285 = fn00000000000169D8(gp, 10<i64>, 0<i64>)
	s1_139 = a0_285
	s0_126 = s2_121
	a5_257 = a0_60
	branch a0_285 != 0<64> l0000000000015510
l0000000000015510:
	branch false l00000000000155D8
l00000000000155B0:
	branch true l000000000001598C
l000000000001598C:
	word64 a0_302 = fn00000000000169D8(gp, 0<i64>, 0<i64>)
	s1_139 = a0_302
	branch a0_302 == 0<64> l0000000000015964
l00000000000159A4:
	s0_126 = s2_121
	a5_257 = a0_60
l0000000000015518:
	branch strchr(s1_139, ':') == 0<64> l00000000000155D8
l0000000000015530:
	Mem323[&qwLoc01A8 + 4<i64>:word32] = 1<32>
	a4_322 = 1<i64>
	branch s4_329 == 0<64> l0000000000015BEC
l0000000000015BEC:
	a0_337 = strchr(s1_139, '/')
	a5_338 = a5_257
	branch a0_337 != 0<64> l0000000000015BB8
l0000000000015C04:
l00000000000155B8:
	word64 a0_342 = fn00000000000169D8(gp, 2<i64>, 0<i64>)
	s1_139 = a0_342
	branch a0_342 == 0<64> l0000000000015964
l0000000000015964:
	branch CONVERT(Mem350[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l000000000001596C:
	__fprintf_chk(Mem350[gp + -1920<i64>:word64], 1<i32>, 0x11A50<64>, a3)
l00000000000155D0:
	a5_257 = a0_60
	s0_126 = s2_121
l00000000000155D8:
	branch s4_329 == 0<64> l0000000000015BA0
l0000000000015BA0:
	a0_337 = strchr(s1_139, '/')
	a5_338 = a5_257
	branch a0_337 == 0<64> l00000000000155FC
l0000000000015BB8:
	Mem373[a0_337:byte] = 0<8>
	s4_329 = a0_337 + 1<i64>
	branch s4_329 == 0<64> l00000000000155FC
l0000000000015BC4:
l00000000000155DC:
	branch CONVERT(Mem375[&qwLoc01A8 + 4<i64>:int32], int32, int64) != 0<64> l000000000001553C
l000000000001553C:
	branch CONVERT(Mem381[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l0000000000015544:
	__fprintf_chk(Mem381[gp + -1920<i64>:word64], 1<i32>, 0x11AD0<64>, a3)
	fn0000000000015FCC(gp, 1<i64>)
l00000000000155E4:
	word64 a0_407 = fn00000000000166F4(gp, &qwLoc01A8 + 4<i64>, s4_329, 0<i64>)
	a5_338 = a0_407
	branch a0_407 < 0<64> l0000000000015B6C
l0000000000015B6C:
	branch CONVERT(Mem414[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l0000000000015B74:
	a0_174 = Mem414[gp + -1920<i64>:word64]
	branch CONVERT(Mem414[&qwLoc01A8 + 4<i64>:int32], int32, int64) != 0<64> l0000000000015CD8
l0000000000015CD8:
l0000000000015B80:
l0000000000015B88:
l0000000000015B8C:
	__fprintf_chk(a0_174, 1<i32>, 0x11A70<64>, a3, a4)
l00000000000155FC:
	a4_322 = CONVERT(Mem433[&qwLoc01A8 + 4<i64>:int32], int32, int64)
	branch a4_322 == 0<64> l00000000000159B0
l00000000000159B0:
	a0_527 = fn0000000000016D74(ra, gp, s1_139, a5_338, &tLoc0188, s0_126, a4_322, a5_338, a6_106, a7, fa3, fa4, out a4_530)
l0000000000015604:
	a0_527 = fn00000000000175BC(ra, gp, s1_139, s1_139, a5_338, &tLoc0188, s0_126, a4_322, fa3, fa4, out a4_530)
l0000000000015618:
	branch a0_527 < 0<64> l00000000000153D8
l000000000001561C:
	branch (s0_126 & 4294623231<i64>) != 0<64> l0000000000015630
l000000000001562C:
	s0_126 = s0_126 | 8<i64>
l0000000000015630:
	branch CONVERT(isatty(1<i32>), int32, uint64) == 0<64> l0000000000015644
l000000000001563C:
	Mem561[gp + 2064<i64>:word32] = 1<32>
	a4_530 = 1<i64>
l0000000000015644:
	branch (s0_126 & 8<i64>) == 0<64> l00000000000159C8
l00000000000159C8:
	branch (s0_126 & 128<i64>) != 0<64> l0000000000015D18
l0000000000015D18:
	__printf_chk(1<i32>, 0x11C28<64>, a2)
l00000000000159D0:
	branch (s0_126 & 512<i64>) != 0<64> l0000000000015D48
l0000000000015D48:
	__printf_chk(1<i32>, 0x11C38<64>, SLICE(a2, uint32, 0))
l00000000000159D8:
	branch (s0_126 & 64<i64>) == 0<64> l00000000000159FC
l00000000000159E0:
	branch CONVERT(Mem569[&qwLoc01A8 + 4<i64>:int32], int32, int64) != 0<64> l00000000000159FC
l00000000000159E8:
	__printf_chk(1<i32>, 0x11C48<64>, a2)
l00000000000159FC:
	branch (s0_126 & 256<i64>) != 0<64> l0000000000015D30
l0000000000015D30:
	__printf_chk(1<i32>, 0x11C58<64>, a2)
l0000000000015A04:
	branch s0_126 << 0x2E<u32> < 0<64> l0000000000015D78
l0000000000015D78:
	__printf_chk(1<i32>, 0x11C68<64>, a2)
l0000000000015A0C:
	branch (s0_126 & 1024<i64>) == 0<64> l0000000000015A2C
l0000000000015A14:
	branch Mem569[&tLoc0188 + 168<i64>:word64] == 0<64> l0000000000015A2C
l0000000000015A1C:
	__printf_chk(1<i32>, 0x11C78<64>, a2)
l0000000000015A2C:
	branch s0_126 << 0x34<u32> >= 0<64> l0000000000015A4C
l0000000000015A34:
	branch Mem569[&tLoc0188 + 176<i64>:word64] == 0<64> l0000000000015A4C
l0000000000015A3C:
	__printf_chk(1<i32>, 0x11C88<64>, a2)
l0000000000015A4C:
	branch s0_126 << 0x32<u32> >= 0<64> l0000000000015A80
l0000000000015A54:
	word64 s2_637 = Mem569[&tLoc0188 + 184<i64>:word64]
	branch s2_637 == 0<64> l0000000000015A80
l0000000000015A5C:
	branch strchr(s2_637, ' ') == 0<64> l0000000000015DA4
l0000000000015DA4:
	__printf_chk(1<i32>, 0x11CA8<64>, a2)
l0000000000015A70:
	__printf_chk(1<i32>, 0x11C98<64>, a2)
l0000000000015A80:
	branch s0_126 << 0x33<u32> >= 0<64> l0000000000015AAC
l0000000000015A88:
	branch strchr(&tLoc0188 + 96<i64>, ' ') == 0<64> l0000000000015D90
l0000000000015D90:
	__printf_chk(1<i32>, 0x11CC8<64>, a2)
l0000000000015A9C:
	__printf_chk(1<i32>, 0x11CB8<64>, a2)
l0000000000015AAC:
	branch (s0_126 & 1<i64>) == 0<64> l0000000000015ACC
l0000000000015AB4:
	branch Mem569[&tLoc0188 + 56<i64>:word64] == 0<64> l0000000000015ACC
l0000000000015ABC:
	__printf_chk(1<i32>, 0x11CD8<64>, a2)
l0000000000015ACC:
	branch (s0_126 & 2<i64>) != 0<64> l0000000000015D60
l0000000000015D60:
	__printf_chk(1<i32>, 0x11CE8<64>, a2)
l0000000000015AD4:
	branch (s0_126 & 0xC000<64>) != 0xC000<64> l00000000000153DC
l0000000000015AE0:
	branch Mem569[&tLoc0188 + 72<i64>:word64] == 0<64> l0000000000015AF8
l0000000000015AE8:
	__printf_chk(1<i32>, 0x11CF8<64>, a2)
l0000000000015AF8:
	word64 s0_709 = Mem569[&tLoc0188 + 64<i64>:word64]
	branch s0_709 == 0<64> l0000000000015B24
l0000000000015B00:
	branch strchr(s0_709, ' ') == 0<64> l0000000000015E90
l0000000000015E90:
	__printf_chk(1<i32>, 0x11D18<64>, a2)
l0000000000015B14:
	__printf_chk(1<i32>, 0x11D08<64>, a2)
l0000000000015B24:
	word64 s0_724 = Mem569[&tLoc0188 + 80<i64>:word64]
	branch s0_724 == 0<64> l0000000000015B50
l0000000000015B2C:
	branch strchr(s0_724, ' ') == 0<64> l0000000000015EA4
l0000000000015EA4:
	__printf_chk(1<i32>, 0x11D38<64>, a2)
l0000000000015B40:
	__printf_chk(1<i32>, 0x11D28<64>, a2)
l0000000000015B50:
	branch Mem569[&tLoc0188 + 88<i64>:word64] == 0<64> l00000000000153DC
l0000000000015B58:
	__printf_chk(1<i32>, 0x11D48<64>, a2)
l000000000001564C:
	word64 a4_1007
	word64 a5_1008
	word64 s0_870
	word64 a3_869
	word64 a5_746
	word64 s4_782
	word64 a3_750
	word64 s2_745 = CONVERT(Mem569[&tLoc0188 + 160<i64>:int32], int32, int64)
	branch CONVERT(Mem569[&qwLoc01A8 + 4<i64>:int32], int32, int64) != 0<64> l000000000001590C
l000000000001590C:
	a5_746 = 128<i64>
	branch s2_745 != 128<i64> l0000000000015660
l0000000000015658:
	a5_746 = 32<i64>
	branch s2_745 == 32<i64> l0000000000015914
l0000000000015914:
	a3_750 = Mem569[&tLoc0188 + 8<i64>:word64]
	branch a3_750 == 0<64> l0000000000015DDC
l0000000000015DDC:
	word64 a5_2734
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11B10<64>, Mem569[&tLoc0188:word64], a4_530, a5_746, a6_106, a7, out a5_2734)
l000000000001591C:
	s4_782 = 1<i64>
l0000000000015660:
	branch true l0000000000015860
l0000000000015860:
	word64 s3_799 = Mem569[&tLoc0188:word64]
	branch CONVERT(strcmp(Mem569[&tLoc0188 + 32<i64>:word64], s3_799), int32, uint64) == 0<64> l0000000000015664
l0000000000015874:
	a3_750 = Mem569[&tLoc0188 + 8<i64>:word64]
	s4_782 = 0<i64>
	branch a3_750 == 0<64> l0000000000015E14
l0000000000015E14:
	fn000000000001654C(gp, 0x11B08<64>, 0x11B10<64>, s3_799, a4_530, a5_746, a6_106, a7, out a5_746)
	s2_745 = CONVERT(Mem569[&tLoc0188 + 160<i64>:int32], int32, int64)
l0000000000015880:
	word64 a5_842
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11B10<64>, Mem569[&tLoc0188:word64], fn000000000001654C(gp, 0x11B08<64>, 0x11AF8<64>, a3_750, a4_530, a5_746, a6_106, a7, out a5_842), a5_842, a6_106, a7, out a5_746)
	branch s4_782 == 0<64> l0000000000015E74
l0000000000015E74:
	s2_745 = CONVERT(Mem569[&tLoc0188 + 160<i64>:int32], int32, int64)
l00000000000158B8:
	a5_1008 = 65544<i64>
	branch (s0_126 & 65544<i64>) == 65544<i64> l0000000000015E64
l0000000000015E64:
	a3_869 = Mem569[&tLoc0188 + 24<i64>:word64]
	s0_870 = 1<i64>
	branch a3_869 != 0<64> l0000000000015C2C
l0000000000015E70:
l0000000000015664:
l0000000000015668:
	word64 a3_876 = Mem569[&tLoc0188 + 16<i64>:word64]
	branch a3_876 == 0<64> l0000000000015690
l0000000000015674:
	fn000000000001654C(gp, 0x11B08<64>, 0x11B28<64>, a3_876, s2_745, a5_746, a6_106, a7, out a5_746)
	s2_745 = CONVERT(Mem569[&tLoc0188 + 160<i64>:int32], int32, int64)
l0000000000015690:
	word64 a5_923
	fn000000000001654C(gp, 0x11B08<64>, 0x11B38<64>, Mem569[&tLoc0188 + 32<i64>:word64], s2_745, a5_746, a6_106, a7, out a5_923)
	word64 a5_937
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11B58<64>, Mem569[&tLoc0188 + 48<i64>:word64], CONVERT(Mem569[&tLoc0188 + 160<i64>:int32], int32, int64), a5_923, a6_106, a7, out a5_937)
	word64 a3_939 = Mem569[&tLoc0188 + 40<i64>:word64]
	branch a3_939 == 0<64> l00000000000156EC
l00000000000156D4:
	word64 a5_2733
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11B68<64>, a3_939, a4_1007, a5_937, a6_106, a7, out a5_2733)
l00000000000156EC:
	a5_1008 = 65544<i64>
	branch (s0_126 & 65544<i64>) == 65544<i64> l0000000000015C1C
l0000000000015C1C:
	a3_869 = Mem569[&tLoc0188 + 24<i64>:word64]
	branch a3_869 == 0<64> l00000000000156FC
l0000000000015C24:
	s0_870 = 0<i64>
l0000000000015C2C:
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11B78<64>, a3_869, a4_1007, 65544<i64>, a6_106, a7, out a5_1008)
	branch s0_870 != 0<64> l00000000000158C8
l00000000000158C8:
	word64 a3_999 = Mem569[&tLoc0188 + 184<i64>:word64]
	branch a3_999 == 0<64> l00000000000158E8
l00000000000158D0:
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11B88<64>, a3_999, a4_1007, a5_1008, a6_106, a7, out a5_1008)
l00000000000158E8:
	word64 a3_1020 = Mem569[&tLoc0188 + 192<i64>:word64]
	branch a3_1020 == 0<64> l00000000000157BC
l00000000000158F0:
	word64 a5_2735
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11BA0<64>, a3_1020, a4_1007, a5_1008, a6_106, a7, out a5_2735)
l0000000000015C44:
l00000000000156FC:
	putchar(10<i32>)
	word64 a3_1043 = Mem569[&tLoc0188 + 184<i64>:word64]
	branch a3_1043 == 0<64> l0000000000015728
l000000000001570C:
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11B88<64>, a3_1043, a4_1007, a5_1008, a6_106, a7, out a5_1008)
l0000000000015728:
	word64 a3_1064 = Mem569[&tLoc0188 + 192<i64>:word64]
	branch a3_1064 == 0<64> l000000000001574C
l0000000000015730:
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11BA0<64>, a3_1064, a4_1007, a5_1008, a6_106, a7, out a5_1008)
l000000000001574C:
	word64 a3_1085 = Mem569[&tLoc0188 + 168<i64>:word64]
	branch a3_1085 == 0<64> l000000000001576C
l0000000000015754:
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11BB0<64>, a3_1085, a4_1007, a5_1008, a6_106, a7, out a5_1008)
l000000000001576C:
	word64 a3_1108 = Mem569[&tLoc0188 + 176<i64>:word64]
	branch a3_1108 == 0<64> l000000000001578C
l0000000000015774:
	word64 a5_2736
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11BC0<64>, a3_1108, a4_1007, a5_1008, a6_106, a7, out a5_2736)
l000000000001578C:
	word64 a5_1129 = CONVERT(Mem569[&qwLoc01A8 + 4<i64>:int32], int32, int64)
	branch a5_1129 == 0<64> l00000000000157A0
l0000000000015794:
	a5_1129 = CONVERT(Mem569[&tLoc0188 + 160<i64>:int32], int32, int64)
	a4_1007 = 111<i64>
	branch a5_1129 <=u 111<i64> l0000000000015E3C
l0000000000015E3C:
	word64 a5_2738
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11BE0<64>, CONVERT(0x80<32> - SLICE(a5_1129, word32, 0), word32, int64), &tLoc0188 + 96<i64>, a5_1129, a6_106, a7, out a5_2738)
l00000000000157A0:
	word64 a5_2737
	a4_1007 = fn000000000001654C(gp, 0x11B08<64>, 0x11BE0<64>, &tLoc0188 + 96<i64>, a4_1007, a5_1129, a6_106, a7, out a5_2737)
l00000000000157BC:
	word64 a5_1175 = Mem569[&tLoc0188 + 64<i64>:word64]
	branch a5_1175 == 0<64> l0000000000015C08
l0000000000015C08:
	a5_1175 = Mem569[&tLoc0188 + 80<i64>:word64]
	branch a5_1175 != 0<64> l00000000000157C4
l0000000000015C10:
	a5_1175 = Mem569[&tLoc0188 + 88<i64>:word64]
	branch a5_1175 != 0<64> l00000000000157C4
l0000000000015C18:
l00000000000157C4:
	putchar(10<i32>)
	word64 a3_1182 = Mem569[&tLoc0188 + 72<i64>:word64]
	branch a3_1182 == 0<64> l00000000000157F0
l00000000000157D4:
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11BF0<64>, a3_1182, a4_1007, a5_1175, a6_106, a7, out a5_1175)
l00000000000157F0:
	word64 a3_1207 = Mem569[&tLoc0188 + 64<i64>:word64]
	branch a3_1207 == 0<64> l0000000000015814
l00000000000157F8:
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11C00<64>, a3_1207, a4_1007, a5_1175, a6_106, a7, out a5_1175)
l0000000000015814:
	word64 a3_1228 = Mem569[&tLoc0188 + 80<i64>:word64]
	branch a3_1228 == 0<64> l0000000000015838
l000000000001581C:
	a4_1007 = fn000000000001654C(gp, 0x11B98<64>, 0x11C10<64>, a3_1228, a4_1007, a5_1175, a6_106, a7, out a5_1175)
l0000000000015838:
	word64 a3_1249 = Mem569[&tLoc0188 + 88<i64>:word64]
	branch a3_1249 == 0<64> l00000000000153DC
l0000000000015840:
	word64 a5_2739
	fn000000000001654C(gp, 0x11B98<64>, 0x11C18<64>, a3_1249, a4_1007, a5_1175, a6_106, a7, out a5_2739)
l00000000000153D0:
	branch CONVERT(Mem94[gp + -2028<i64>:int32], int32, int64) == 0<64> l000000000001556C
l000000000001556C:
	fwrite(0x11A08<64>, SLICE(1<i64>, size_t, 0), SLICE(37<i64>, size_t, 0), Mem94[gp + -1920<i64>:word64])
l000000000001538C:
	branch CONVERT(Mem88[gp + -2028<i64>:int32], int32, int64) != 0<64> l00000000000153D8
l00000000000153D8:
l0000000000015394:
	fwrite(0x119D8<64>, SLICE(1<i64>, size_t, 0), SLICE(46<i64>, size_t, 0), Mem88[gp + -1920<i64>:word64])
l00000000000153DC:
	branch a5_7 != Mem1286[gp + -1936<i64>:word64] l0000000000015E8C
l0000000000015E8C:
	__stack_chk_fail()
l00000000000153EC:
	return
l0000000000015224:
	branch a0_60 >u 118<i64> l0000000000015200
l000000000001522C:
	word64 a5_1385 = CONVERT(Mem50[(a0_60 << 0x20<u32> >>u 0x1E<u32>) + 0x102A0<64>:int32], int32, int64)
	word64 a3_1409
	word64 a2_1410
	word64 a6_1411
	word64 t1_1412
	word64 t3_1413
	word64 a7_1414
	word64 fa3_1415
	word64 fa4_1416
	call a5_1385 (retsize: 0;)
		uses: a0:a0_60,a1:a1,a2:a2_1410,a3:a3_1409,a4:0x102A0<64>,a5:a5_1385,a6:a6_1411,a7:a7_1414,fa3:fa3_1415,fa4:fa4_1416,gp:gp,ra:ra,s0:0<i64>,s1:0x108E0<64>,s10:0<i64>,s11:s11,s2:a1,s3:a0,s4:0x12000<64>,s5:s5,s6:0<i64>,s7:1<i64>,s8:0x1000<64>,s9:0<i64>,Stack +0018:qwLoc01A8,Stack +0020:ptrLoc01A0,Stack +0028:tLoc0198,Stack +0030:qwLoc0190,Stack +0038:tLoc0188,Stack +0100:qwLocC0,Stack +0108:bLocB8,t1:t1_1412,t3:t3_1413
		defs: a2:a2_1410,a3:a3_1409,a6:a6_1411,a7:a7_1414,fa3:fa3_1415,fa4:fa4_1416,t1:t1_1412,t3:t3_1413
	return
fn0000000000015180_exit:


void fn0000000000015EB8(word64 a0, word32 dwArg00, char * ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] Stack +0000:[0..31] Stack +0008:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 gp sp
// Preserved:
fn0000000000015EB8_entry:
	ptr64 fp
	word64 qwArg00
l0000000000015EB8:
	__libc_start_main(0x0000000000015180<p64>, SLICE(qwArg00, int32, 0), &ptrArg08, 0x00000000000182E8<p64>, 0x0000000000018378<p64>, a0, fp & -16<i64>)
	return
fn0000000000015EB8_exit:


void fn0000000000015EF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015F64
// MayUse: 
// LiveOut:
// Trashed: a0 a4 a5 ra t1
// Preserved: sp
fn0000000000015EF0_entry:
l0000000000015EF0:
	branch true l0000000000015F20
l0000000000015F0C:
	branch true l0000000000015F20
l0000000000015F20:
	return
l0000000000015F18:
	word64 t1_16
	word64 ra_17
	call 0<64> (retsize: 0;)
		uses: a0:0x102A0<64>,ra:ra_17,t1:t1_16
		defs: ra:ra_17,t1:t1_16
	return
fn0000000000015EF0_exit:


void fn0000000000015F24()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015F94
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
fn0000000000015F24_entry:
l0000000000015F24:
	branch true l0000000000015F60
l0000000000015F4C:
	branch true l0000000000015F60
l0000000000015F60:
	return
l0000000000015F58:
	word64 t1_19
	call 0<64> (retsize: 0;)
		uses: a0:0x102A0<64>,t1:t1_19
		defs: t1:t1_19
	return
fn0000000000015F24_exit:


void fn0000000000015F64(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp:[0..63]
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: ra s0 sp
fn0000000000015F64_entry:
l0000000000015F64:
	branch CONVERT(Mem5[gp + -1900<i64>:byte], byte, word64) != 0<64> l0000000000015F84
l0000000000015F78:
	fn0000000000015EF0()
	Mem16[gp + 2196<i64>:byte] = 1<8>
l0000000000015F84:
	return
fn0000000000015F64_exit:


void fn0000000000015F94(word64 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..63]
// LiveOut:
// Trashed: a0 a1 a5 ra t1
// Preserved: sp
fn0000000000015F94_entry:
l0000000000015F94:
	branch Mem0[0x19E28<64>:word64] != 0<64> l0000000000015FA8
l0000000000015FA8:
	branch true l0000000000015FA4
l0000000000015FB4:
	call 0<64> (retsize: 0;)
		uses: ra:ra,Stack +0008:ra
l0000000000015FC8_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
l0000000000015FA4:
l0000000000015FA4_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
fn0000000000015F94_exit:


void fn0000000000015FCC(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] gp:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a3 t1 t3
// Preserved: ra s0 sp
fn0000000000015FCC_entry:
l0000000000015FCC:
	word64 a3_9 = Mem7[gp + -1920<i64>:word64]
	branch a0 != 0<64> l0000000000016090
l0000000000016090:
	fwrite(0x10BE0<64>, SLICE(1<i64>, size_t, 0), SLICE(26<i64>, size_t, 0), a3_9)
	fwrite(0x10C00<64>, SLICE(1<i64>, size_t, 0), SLICE(54<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10C38<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10C88<64>, SLICE(1<i64>, size_t, 0), SLICE(62<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10CC8<64>, SLICE(1<i64>, size_t, 0), SLICE(79<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10D18<64>, SLICE(1<i64>, size_t, 0), SLICE(79<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10D68<64>, SLICE(1<i64>, size_t, 0), SLICE(42<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10D98<64>, SLICE(1<i64>, size_t, 0), SLICE(76<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10DE8<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10E38<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fputc()
	fwrite(0x10E88<64>, SLICE(1<i64>, size_t, 0), SLICE(23<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10EA0<64>, SLICE(1<i64>, size_t, 0), SLICE(71<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10EE8<64>, SLICE(1<i64>, size_t, 0), SLICE(57<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10F28<64>, SLICE(1<i64>, size_t, 0), SLICE(58<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10F68<64>, SLICE(1<i64>, size_t, 0), SLICE(57<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10FA8<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x10FF8<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11048<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11098<64>, SLICE(1<i64>, size_t, 0), SLICE(46<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x110C8<64>, SLICE(1<i64>, size_t, 0), SLICE(72<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11118<64>, SLICE(1<i64>, size_t, 0), SLICE(45<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11148<64>, SLICE(1<i64>, size_t, 0), SLICE(67<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11190<64>, SLICE(1<i64>, size_t, 0), SLICE(64<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x111D8<64>, SLICE(1<i64>, size_t, 0), SLICE(72<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11228<64>, SLICE(1<i64>, size_t, 0), SLICE(46<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fputc()
	fwrite(0x11258<64>, SLICE(1<i64>, size_t, 0), SLICE(15<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11268<64>, SLICE(1<i64>, size_t, 0), SLICE(87<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x112C0<64>, SLICE(1<i64>, size_t, 0), SLICE(60<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11300<64>, SLICE(1<i64>, size_t, 0), SLICE(68<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11348<64>, SLICE(1<i64>, size_t, 0), SLICE(58<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11388<64>, SLICE(1<i64>, size_t, 0), SLICE(57<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x113C8<64>, SLICE(1<i64>, size_t, 0), SLICE(62<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	return
l0000000000015FE0:
	fwrite(0x11408<64>, SLICE(1<i64>, size_t, 0), SLICE(77<i64>, size_t, 0), a3_9)
	fwrite(0x11458<64>, SLICE(1<i64>, size_t, 0), SLICE(62<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11498<64>, SLICE(1<i64>, size_t, 0), SLICE(65<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x114E0<64>, SLICE(1<i64>, size_t, 0), SLICE(76<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11530<64>, SLICE(1<i64>, size_t, 0), SLICE(65<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x11578<64>, SLICE(1<i64>, size_t, 0), SLICE(41<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	fwrite(0x115A8<64>, SLICE(1<i64>, size_t, 0), SLICE(30<i64>, size_t, 0), Mem7[gp + -1920<i64>:word64])
	return
fn0000000000015FCC_exit:


word64 fn00000000000163B0(word64 gp, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a4:[0..31] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000163B0_entry:
	ptr64 fp
	char bLocE8
l00000000000163B0:
	word64 a5_27 = Mem25[gp + -1936<i64>:word64]
	__sprintf_chk(&bLocE8, 1<i32>, SLICE(128<i64>, size_t, 0), 0x115C8<64>, SLICE(a4, uint32, 0))
	word64 s0_38 = 1<i64>
	word64 s1_42 = fp + -230<i64>
	branch false l000000000001646C
l0000000000016430:
	__sprintf_chk(s1_42, 1<i32>, SLICE(128<i64>, size_t, 0), 0x115C8<64>, SLICE(a4, uint32, 0))
	word64 a4_62 = s1_42 + 2<i64>
	branch (s0_38 & 1<i64>) == 0<64> l00000000000164B8
l00000000000164B8:
	s1_42 = a4_62
l0000000000016454:
	branch s0_38 == 15<i64> l00000000000164C4
l00000000000164C4:
	s1_42 = a4_62
l0000000000016458:
	Mem68[s1_42 + 2<i64>:byte] = 0x3A<8>
	s1_42 = s1_42 + 3<i64>
l0000000000016464:
	s0_38 = CONVERT(CONVERT(s0_38, word64, word32) + 1<i32>, word32, int64)
	branch s0_38 != 16<i64> l0000000000016430
l000000000001646C:
	Mem77[s1_42:byte] = 0<8>
	word64 a0_81 = __strdup(&bLocE8)
	branch a5_27 != Mem77[gp + -1936<i64>:word64] l00000000000164CC
l00000000000164CC:
	__stack_chk_fail()
l0000000000016484:
	return a0_81
fn00000000000163B0_exit:


word64 fn00000000000164D0(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2
// Preserved: ra s0 s1 s2 sp
fn00000000000164D0_entry:
l00000000000164D0:
	word64 a0_20
	word64 a0_19 = CONVERT(open(0x115D0<64>, 0<i32>), int32, uint64)
	branch a0_19 < 0<64> l0000000000016544
l0000000000016544:
	a0_20 = -1<i64>
l0000000000016500:
	word64 a0_25 = CONVERT(read(SLICE(a0_19, int32, 0), a0, SLICE(a1, size_t, 0)), ssize_t, uint64)
	close(SLICE(a0_19, int32, 0))
	a0_20 = CONVERT(0<32> - CONVERT(CONVERT(SLICE(a0_25 - a1, word32, 0), word32, int64) != 0<64>, bool, word32), word32, int64)
l000000000001652C:
	return a0_20
fn00000000000164D0_exit:


word64 fn000000000001654C(word64 gp, word64 a0, word64 a1, word64 a3, word64 a4, word64 a5, word64 a6, word64 a7, ptr64 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a3:[0..63] a4:[0..63] a5:[0..63] a6:[0..63] a7:[0..63] gp:[0..63]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 t1
// Preserved: a6 a7 gp ra s0 s1 s2 s3 sp
fn000000000001654C_entry:
	ptr64 fp
l000000000001654C:
	word64 t3_7 = Mem5[gp + -1936<i64>:word64]
	__vasprintf_chk(fp + -112<i64>, 1<i64>, fp + -40<i64>, fp + -40<i64>, a3, a4, a5, a6, a7)
	branch a0_45 < 0<64> l00000000000165D8
l00000000000165A8:
	fputs(a1, Mem36[gp + -1912<i64>:word64])
	branch CONVERT(Mem36[gp + -2032<i64>:int32], int32, int64) != 0<64> l000000000001661C
l000000000001661C:
	fputs(a0, Mem36[gp + -1912<i64>:word64])
l00000000000165BC:
	fputs(0<64>, Mem36[gp + -1912<i64>:word64])
	branch CONVERT(Mem36[gp + -2032<i64>:int32], int32, int64) != 0<64> l0000000000016600
l0000000000016600:
	fwrite(0x115E0<64>, SLICE(1<i64>, size_t, 0), SLICE(4<i64>, size_t, 0), Mem36[gp + -1912<i64>:word64])
l00000000000165D0:
	free(0<64>)
l00000000000165D8:
	word64 a5_82 = Mem36[gp + -1936<i64>:word64]
	branch t3_7 != a5_82 l000000000001662C
l000000000001662C:
	__stack_chk_fail()
l00000000000165E4:
	a5Out = a5_82
	return t3_7
fn000000000001654C_exit:


word64 fn0000000000016630(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000166F4
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 sp
fn0000000000016630_entry:
l0000000000016630:
	word64 a5_31
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	word64 a0_22 = __errno_location()
	Mem23[a0_22:word32] = 0<32>
	word64 a0_28 = CONVERT(strtol(a0), int32, uint64)
	branch true l000000000001668C
l0000000000016680:
	branch a0 == 0<64> l000000000001668C
l0000000000016684:
	branch CONVERT(Mem23[0<64>:byte], byte, word64) == 0<64> l00000000000166C4
l00000000000166C4:
	a5_31 = CONVERT(Mem23[a0_22:int32], int32, int64)
	branch a5_31 != 0<64> l0000000000016690
l00000000000166CC:
	branch a0_28 != a0_28 l00000000000166E0
l00000000000166E0:
	a5_31 = -34<i64>
l00000000000166D8:
	Mem35[a1:word32] = SLICE(a0_28, word32, 0)
l000000000001668C:
	a5_31 = CONVERT(Mem23[a0_22:int32], int32, int64)
l0000000000016690:
	branch a5_31 <= 0<64> l00000000000166E8
l00000000000166E8:
	a5_31 = -22<i64>
l0000000000016694:
	a5_31 = CONVERT(0<32> - SLICE(a5_31, word32, 0), word32, int64)
l0000000000016698:
	branch a5_7 != Mem45[gp + -1936<i64>:word64] l00000000000166F0
l00000000000166F0:
	__stack_chk_fail()
l00000000000166A8:
	return a5_31
fn0000000000016630_exit:


word64 fn00000000000166F4(word64 gp, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000166F4_entry:
	word64 qwLoc40
l00000000000166F4:
	word64 a0_201
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	word64 s0_11 = CONVERT(Mem9[a0:int32], int32, int64)
	branch s0_11 != 0<64> l00000000000167C8
l000000000001672C:
	branch strchr(a1, '.') == 0<64> l00000000000167C8
l00000000000167C8:
	branch fn0000000000016630(gp, a1, &qwLoc40) == 0<64> l0000000000016794
l00000000000167D8:
l000000000001673C:
	branch CONVERT(inet_pton(2<i32>, a1, &qwLoc40), int32, uint64) == 0<64> l000000000001678C
l0000000000016750:
	word64 a4_232
	word64 a3_231
	word64 a0_45 = fn00000000000182B4(CONVERT(Mem20[&qwLoc40:int32], int32, int64), out a3_231, out a4_232)
	branch a0_45 == 0<64> l0000000000016790
l000000000001675C:
	branch (a0_45 & 1<i64>) != 0<64> l0000000000016778
l0000000000016764:
	word64 a5_51 = CONVERT(SLICE(a0_45, word32, 0) >>u 1<i32>, word32, int64)
	branch a5_51 == 0<64> l0000000000016790
l000000000001676C:
	branch (a5_51 & 1<i64>) == 0<64> l0000000000016820
l0000000000016820:
	a0_45 = CONVERT(SLICE(a0_45, word32, 0) >>u 2<i32>, word32, int64)
	branch a0_45 != 0<64> l000000000001675C
l0000000000016828:
l0000000000016774:
	a0_45 = a5_51
l0000000000016778:
	a0_45 = CONVERT(SLICE(a0_45, word32, 0) >>u 1<i32>, word32, int64)
	s0_11 = CONVERT(CONVERT(s0_11, word64, word32) + 1<i32>, word32, int64)
	branch a0_45 == 0<64> l0000000000016790
l0000000000016784:
	branch (a0_45 & 1<i64>) != 0<64> l0000000000016778
l000000000001678C:
	s0_11 = -1<i64>
l0000000000016790:
	Mem67[&qwLoc40:word32] = SLICE(s0_11, word32, 0)
l0000000000016794:
	word64 a5_71 = CONVERT(Mem69[&qwLoc40:int32], int32, int64)
	branch a2 == 0<64> l00000000000167DC
l000000000001679C:
	branch a5_71 <= 32<i64> l00000000000167DC
l00000000000167DC:
	a0_201 = a5_71
	branch a5_71 < 0<64> l00000000000167C0
l00000000000167E4:
	branch CONVERT(Mem69[a0:int32], int32, int64) != 0<64> l00000000000167B8
l00000000000167EC:
	branch a5_71 > 32<i64> l00000000000167C0
l00000000000167A8:
	branch CONVERT(Mem69[a0:int32], int32, int64) != 0<64> l00000000000167B8
l00000000000167B0:
	Mem94[a0:word32] = 1<32>
l00000000000167B8:
	a0_201 = a5_71
	branch a5_71 <= 128<i64> l00000000000167F4
l00000000000167C0:
	a0_201 = -1<i64>
l00000000000167F4:
	branch a5_7 != Mem102[gp + -1936<i64>:word64] l000000000001682C
l000000000001682C:
	__stack_chk_fail()
l0000000000016800:
	return a0_201
fn00000000000166F4_exit:


word64 fn0000000000016830(word64 gp, word64 a0, ptr64 & a4Out, ptr64 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000168B8
//      fn0000000000016D74
// MayUse:  a0:[0..63] gp:[0..63]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: a3 ra s0 sp
fn0000000000016830_entry:
l0000000000016830:
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	word32 dwLoc20_33 = 0<32>
	branch a0 == 0<64> l0000000000016864
l000000000001684C:
	word64 a3_44
	word64 a4_45
	dwLoc20_33 = SLICE(fn00000000000182B4(CONVERT(0xFFFFFFFF<32> << CONVERT(0x20<32> - SLICE(a0, word32, 0), word32, int64), word32, int64), out a3_44, out a4_45), word32, 0)
l0000000000016864:
	word64 a5_26 = Mem23[gp + -1936<i64>:word64]
	word64 a0_27 = CONVERT(dwLoc20_33, word32, int64)
	branch a5_7 != a5_26 l0000000000016884
l0000000000016884:
	__stack_chk_fail()
l0000000000016874:
	a4Out = a5_7
	a5Out = a5_26
	return a0_27
fn0000000000016830_exit:


void fn00000000000168B8(word64 gp, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..63] gp:[0..63]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn00000000000168B8_entry:
l00000000000168B8:
	word64 a4_22
	word64 a5_23
	fn0000000000016830(gp, a1, out a4_22, out a5_23)
	return
fn00000000000168B8_exit:


word64 fn00000000000168E4(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a5 a6 a7 t1 t3 t4 t5
// Preserved: ra s0 s1 sp
fn00000000000168E4_entry:
	word64 qwLoc58
	word64 qwLoc48
	word64 qwLoc40
l00000000000168E4:
	word64 a0_56
	word64 a0_35
	word64 a4_7 = Mem5[gp + -1936<i64>:word64]
	branch a0 == 2<i64> l0000000000016984
l0000000000016984:
	word64 t5_17 = CONVERT(Mem13[a1:byte], byte, word64)
	word64 t4_18 = CONVERT(Mem13[a1 + 1<i64>:byte], byte, word64)
	word64 t3_19 = CONVERT(Mem13[a1 + 2<i64>:byte], byte, word64)
	word64 t1_20 = CONVERT(Mem13[a1 + 3<i64>:byte], byte, word64)
	Mem21[&qwLoc58:word64] = 0<64>
	Mem30[&qwLoc58:word16] = SLICE(a0, word16, 0)
	Mem31[&qwLoc58 + 4<i64>:byte] = SLICE(t5_17, byte, 0)
	Mem32[&qwLoc58 + 5<i64>:byte] = SLICE(t4_18, byte, 0)
	Mem33[&qwLoc58 + 6<i64>:byte] = SLICE(t3_19, byte, 0)
	Mem34[&qwLoc58 + 7<i64>:byte] = SLICE(t1_20, byte, 0)
	a0_35 = CONVERT(getnameinfo(&qwLoc58, 16<i32>, gp + -1896<i64>, 1025<i32>, 0<i64>, 0<i32>, 0<i32>), int32, uint64)
l0000000000016908:
	branch a0 == 10<i64> l0000000000016934
l0000000000016934:
	Mem37[&qwLoc48:word64] = 0<64>
	Mem40[&qwLoc40:word64] = 0<64>
	Mem43[&qwLoc48:word16] = SLICE(a0, word16, 0)
	memcpy(&qwLoc40, a1, SLICE(16<i64>, size_t, 0))
	a0_35 = CONVERT(getnameinfo(&qwLoc48, 28<i32>, gp + -1896<i64>, 1025<i32>, 0<i64>, 0<i32>, 0<i32>), int32, uint64)
l0000000000016974:
	branch a0_35 != 0<64> l0000000000016910
l0000000000016978:
	a0_56 = __strdup(gp + -1896<i64>)
l0000000000016910:
	a0_56 = 0<i64>
l0000000000016914:
	branch a4_7 != Mem61[gp + -1936<i64>:word64] l00000000000169D4
l00000000000169D4:
	__stack_chk_fail()
l0000000000016920:
	return a0_56
fn00000000000168E4_exit:


word64 fn00000000000169D8(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..31] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000169D8_entry:
	struct addrinfo * ptrLoc70
	struct addrinfo tLoc68
l00000000000169D8:
	word64 a0_136
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	Mem10[&tLoc68:word64] = 0<64>
	Mem12[&tLoc68 + 4<i64>:word32] = SLICE(a0, word32, 0)
	Mem28[&tLoc68 + 8<i64>:word64] = 0<64>
	Mem29[&tLoc68 + 16<i64>:word64] = 0<64>
	Mem30[&tLoc68 + 24<i64>:word64] = 0<64>
	branch CONVERT(getaddrinfo(a1, 0<i64>, &tLoc68, &ptrLoc70), int32, uint64) != 0<64> l0000000000016AD8
l0000000000016AD8:
	a0_136 = 0<i64>
l0000000000016A34:
	word64 s0_35 = Mem32[&ptrLoc70:word64]
	branch s0_35 == 0<64> l0000000000016AA0
l0000000000016A3C:
l0000000000016A68:
	word64 a0_41 = CONVERT(Mem32[s0_35 + 4<i64>:int32], int32, int64)
	word64 a1_42 = Mem32[s0_35 + 24<i64>:word64]
	branch a0_41 != 2<i64> l0000000000016A4C
l0000000000016A4C:
	branch inet_ntop(SLICE(a0_41, int32, 0), a1_42 + 8<i64>, gp + -864<i64>, 64<i32>) != 0<64> l0000000000016A88
l0000000000016A74:
	branch inet_ntop(SLICE(a0_41, int32, 0), a1_42 + 4<i64>, gp + -864<i64>, 64<i32>) == 0<64> l0000000000016A60
l0000000000016A60:
	s0_35 = Mem32[s0_35 + 40<i64>:word64]
	branch s0_35 == 0<64> l0000000000016A9C
l0000000000016A9C:
	s0_35 = Mem32[&ptrLoc70:word64]
l0000000000016AA0:
	freeaddrinfo(s0_35)
	a0_136 = 0<i64>
l0000000000016A88:
	freeaddrinfo(Mem32[&ptrLoc70:word64])
	a0_136 = __strdup(gp + -864<i64>)
l0000000000016AAC:
	branch a5_7 != Mem32[gp + -1936<i64>:word64] l0000000000016AE0
l0000000000016AE0:
	__stack_chk_fail()
l0000000000016AB8:
	return a0_136
fn00000000000169D8_exit:


void fn0000000000016B38(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
fn0000000000016B38_entry:
l0000000000016B38:
	branch a0 >u 127<i64> l0000000000016B5C
l0000000000016B5C:
	return
l0000000000016B40:
	return
fn0000000000016B38_exit:


word64 fn0000000000016B68(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
// MayUse:  a0:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra sp
fn0000000000016B68_entry:
l0000000000016B68:
	word64 a4_100
	word64 a3_137
	word64 a4_138
	word64 a0_7 = fn00000000000182B4(a0, out a3_137, out a4_138)
	word64 a5_11 = CONVERT(SLICE(a0_7, word32, 0) >>u 24<i32>, word32, int64)
	branch a5_11 == 0<64> l0000000000016BD8
l0000000000016BD8:
	a4_100 = 0x115E8<64>
l0000000000016B7C:
	branch a5_11 == 10<i64> l0000000000016C2C
l0000000000016B84:
	word64 a4_16 = CONVERT(SLICE(a0_7, word32, 0) >>u 16<i32>, word32, int64)
	branch a5_11 == 100<i64> l0000000000016C58
l0000000000016C58:
	branch (a4_16 & 192<i64>) != 64<i64> l0000000000016BC0
l0000000000016C64:
	a4_100 = 0x11618<64>
l0000000000016B90:
	branch a5_11 == 127<i64> l0000000000016C70
l0000000000016C70:
	a4_100 = 0x11630<64>
l0000000000016B98:
	word64 a2_24 = CONVERT(SLICE(a0_7, word32, 0) >>u 8<i32>, word32, int64)
	branch a5_11 == 169<i64> l0000000000016C44
l0000000000016C44:
	branch (a4_16 & 255<i64>) != 254<i64> l0000000000016BC0
l0000000000016C4C:
	a4_100 = 0x11640<64>
l0000000000016BAC:
	branch a5_11 != 172<i64> l0000000000016BF0
l0000000000016BF0:
	branch a5_11 != 192<i64> l0000000000016C7C
l0000000000016C7C:
	branch a5_11 != 203<i64> l0000000000016D18
l0000000000016D18:
	branch a5_11 != 255<i64> l0000000000016D4C
l0000000000016D4C:
	branch a5_11 != 198<i64> l0000000000016BC0
l0000000000016D54:
	a4_100 = 0x11650<64>
	branch (a4_16 & 254<i64>) != 18<i64> l0000000000016BE0
l0000000000016D68:
	a4_100 = 0x11738<64>
l0000000000016D20:
	a4_100 = 0x11710<64>
	branch (a4_16 & 255<i64>) != a5_11 l0000000000016BE0
l0000000000016D2C:
	a4_100 = 0x11710<64>
	branch (a2_24 & 255<i64>) != 255<i64> l0000000000016BE0
l0000000000016D38:
	branch (a0_7 & 255<i64>) != (a2_24 & 255<i64>) l0000000000016BE0
l0000000000016D40:
	a4_100 = 0x11720<64>
l0000000000016C84:
	branch (a4_16 & 255<i64>) != 0<64> l0000000000016BC0
l0000000000016C88:
	branch (a2_24 & 255<i64>) != 113<i64> l0000000000016BC0
l0000000000016C90:
	a4_100 = 0x116C0<64>
l0000000000016BF8:
	branch ((a4_16 | a2_24) & 255<i64>) == 0<64> l0000000000016CD0
l0000000000016CD0:
	a4_100 = 0x11660<64>
l0000000000016C04:
	branch (a4_16 & 255<i64>) == 2<i64> l0000000000016CDC
l0000000000016CDC:
	branch (a2_24 & 255<i64>) != 0<64> l0000000000016BC0
l0000000000016CE0:
	a4_100 = 0x11680<64>
l0000000000016C0C:
	branch (a4_16 & 255<i64>) == 51<i64> l0000000000016C9C
l0000000000016C9C:
	branch (a2_24 & 255<i64>) != 100<i64> l0000000000016BC0
l0000000000016CA4:
	a4_100 = 0x116A0<64>
l0000000000016C14:
	branch (a4_16 & 255<i64>) == 88<i64> l0000000000016CB0
l0000000000016CB0:
	branch (a2_24 & 255<i64>) == 99<i64> l0000000000016D00
l0000000000016D00:
	a4_100 = 0x116E0<64>
l0000000000016C1C:
	branch (a4_16 & 255<i64>) == 52<i64> l0000000000016CEC
l0000000000016CEC:
	branch (a2_24 & 255<i64>) != 193<i64> l0000000000016BC0
l0000000000016CF4:
	a4_100 = 0x11708<64>
l0000000000016C24:
	branch (a4_16 & 255<i64>) != 168<i64> l0000000000016BC0
l0000000000016BB4:
	branch (a4_16 & 240<i64>) == 16<i64> l0000000000016C2C
l0000000000016C2C:
	return 0x11608<64>
l0000000000016BC0:
	branch CONVERT(CONVERT(a5_11, word64, word32) + -224<i32>, word32, int64) >u 15<i64> l0000000000016CB8
l0000000000016CB8:
	branch (a5_11 & 240<i64>) == 240<i64> l0000000000016D0C
l0000000000016D0C:
	a4_100 = 0x11710<64>
l0000000000016CC4:
	a4_100 = 0x11650<64>
l0000000000016BCC:
	a4_100 = 0x11748<64>
l0000000000016BE0:
	return a4_100
fn0000000000016B68_exit:


word64 fn0000000000016D74(word64 ra, word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 a5, word64 a6, word64 a7, word64 fa3, word64 fa4, ptr64 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] a5:[0..31] a6:[0..63] a7:[0..63] fa3:[0..63] fa4:[0..63] gp:[0..63] ra:[0..63]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a4 a5
// Preserved: a3 a6 a7 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp t1 t3 t4 t5
fn0000000000016D74_entry:
	word64 qwLoc01B8
	word64 qwLoc01B0
	word64 qwLoc01A8
	word64 qwLoc01A0
	word64 qwLoc0198
	char * ptrLoc0190
	char bLoc0188
	char bLoc0158
l0000000000016D74:
	word64 a0_465
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	memset(a2, 0<i32>, SLICE(200<i64>, size_t, 0))
	word64 s6_11 = a2
	word64 s5_116 = a1
	branch CONVERT(inet_pton(2<i32>, a0, &qwLoc01B8), int32, uint64) <= 0<64> l0000000000016E60
l0000000000016E60:
	branch CONVERT(Mem37[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000016E20
l0000000000016E68:
	__fprintf_chk(Mem37[gp + -1920<i64>:word64], 1<i32>, 0x11788<64>, a3)
	a0_465 = -1<i64>
l0000000000016DDC:
	word64 a0_138
	branch a1 < 0<64> l0000000000016E88
l0000000000016E88:
	s5_116 = 32<i64>
	branch a3 << 0x2D<u32> >= 0<64> l0000000000016EBC
l0000000000016E94:
	word64 a4_805
	word64 a3_804
	word64 a0_55 = fn00000000000182B4(CONVERT(Mem37[&qwLoc01B8:int32], int32, int64), out a3_804, out a4_805)
	s5_116 = 8<i64>
	word64 a5_59 = CONVERT(SLICE(a0_55, word32, 0) >>u 24<i32>, word32, int64)
	branch a0_55 >= 0<64> l0000000000016EBC
l0000000000016EA8:
	s5_116 = 24<i64>
	branch CONVERT(CONVERT(a5_59, word64, word32) + -128<i32>, word32, int64) >u 63<i64> l0000000000016EBC
l0000000000016EB8:
	s5_116 = 16<i64>
l0000000000016DE0:
	Mem64[&ptrLoc0190:word64] = a0
	word64 a0_65 = a0
	word64 s0_66 = 3<i64>
l0000000000016DF0:
	word64 a0_71 = strchr(a0_65, '.')
	Mem73[&ptrLoc0190:word64] = a0_71
	branch a0_71 == 0<64> l0000000000017194
l0000000000017194:
l00000000000171A0:
	branch CONVERT(__asprintf_chk(&ptrLoc0190, 1<i32>, 0x117A8<64>, a3), int32, uint64) == -1<i64> l00000000000172BC
l00000000000172BC:
	a0_138 = Mem73[gp + -1920<i64>:word64]
l00000000000171B8:
	s0_66 = CONVERT(CONVERT(s0_66, word64, word32) + -1<i32>, word32, int64)
	branch s0_66 != 0<64> l00000000000171A0
l00000000000171C4:
l0000000000016E00:
	Mem95[&ptrLoc0190:word64] = a0_71 + 1<i64>
	a0_65 = a0_71 + 1<i64>
	s0_66 = CONVERT(CONVERT(s0_66, word64, word32) + -1<i32>, word32, int64)
	branch s0_66 != 0<64> l0000000000016DF0
l0000000000016E10:
	branch a1 <= 32<i64> l0000000000016EBC
l0000000000016EBC:
	branch inet_ntop(2<i32>, &qwLoc01B8, &bLoc0188, 47<i32>) == 0<64> l0000000000017074
l0000000000016ED4:
	Mem115[a2:word64] = __strdup(&bLoc0188)
	word64 a4_794
	word64 a5_795
	Mem124[&qwLoc01B0:word32] = SLICE(fn0000000000016830(gp, s5_116, out a4_794, out a5_795), word32, 0)
	Mem129[&bLoc0188:word64] = 0<64>
	branch inet_ntop(2<i32>, &qwLoc01B0, &bLoc0188, 16<i32>) == 0<64> l0000000000017300
l0000000000017300:
	a0_138 = Mem136[gp + -1920<i64>:word64]
l0000000000016F24:
	Mem142[a2 + 48<i64>:word64] = __strdup(&bLoc0188)
	word64 s0_143 = CONVERT(Mem142[&qwLoc01B8:int32], int32, int64)
	Mem144[a2 + 160<i64>:word32] = SLICE(s5_116, word32, 0)
	word64 a5_797
	word64 a4_796
	Mem155[&qwLoc01A0:word32] = SLICE(~fn0000000000016830(gp, s5_116, out a4_796, out a5_797) | s0_143, word32, 0)
	Mem156[&bLoc0188:word64] = 0<64>
	branch inet_ntop(2<i32>, &qwLoc01A0, &bLoc0188, 16<i32>) == 0<64> l00000000000172F4
l00000000000172F4:
	a0_138 = Mem163[gp + -1920<i64>:word64]
l0000000000016F84:
	Mem169[a2 + 40<i64>:word64] = __strdup(&bLoc0188)
	word64 s0_170 = CONVERT(Mem169[&qwLoc01B8:int32], int32, int64)
	word64 a4_173
	word64 a5_174
	word64 a0_172 = fn0000000000016830(gp, s5_116, out a4_173, out a5_174)
	word64 a3_175 = CONVERT(Mem169[&qwLoc01A0:int32], int32, int64)
	word64 s0_176 = a0_172 & s0_170
	Mem180[&qwLoc01A8:word32] = SLICE(s0_176, word32, 0)
	Mem200[a2 + 24<i64>:word64] = fn0000000000017F04(gp, s0_176, s5_116, s0_176, a3_175, a4_173, a5_174, a6, a7)
	Mem205[&bLoc0188:word64] = 0<64>
	branch inet_ntop(2<i32>, &qwLoc01A8, &bLoc0188, 16<i32>) == 0<64> l00000000000172DC
l00000000000172DC:
	a0_138 = Mem212[gp + -1920<i64>:word64]
l0000000000016FF4:
	word64 a5_237
	word64 a0_217 = __strdup(&bLoc0188)
	word64 s0_218 = CONVERT(Mem212[&qwLoc01A8:int32], int32, int64)
	Mem219[a2 + 32<i64>:word64] = a0_217
	Mem229[a2 + 184<i64>:word64] = fn0000000000016B68(s0_218)
	word64 a4_799
	word64 a3_798
	word64 a0_231 = fn00000000000182B4(s0_218, out a3_798, out a4_799)
	word64 a5_235 = CONVERT(SLICE(a0_231, word32, 0) >>u 24<i32>, word32, int64)
	branch a0_231 >= 0<64> l0000000000017098
l0000000000017098:
	a5_237 = 0x11758<64>
l0000000000017024:
	branch CONVERT(CONVERT(a5_235, word64, word32) + -128<i32>, word32, int64) <=u 63<i64> l000000000001727C
l000000000001727C:
	a5_237 = 0x11760<64>
l0000000000017030:
	branch CONVERT(CONVERT(a5_235, word64, word32) + -192<i32>, word32, int64) <=u 31<i64> l00000000000172A4
l00000000000172A4:
	a5_237 = 0x11768<64>
l000000000001703C:
	branch CONVERT(CONVERT(a5_235, word64, word32) + -224<i32>, word32, int64) >u 14<i64> l00000000000172B0
l00000000000172B0:
	a5_237 = 0x11778<64>
l0000000000017048:
	a5_237 = 0x11770<64>
l00000000000170A0:
	word64 a5_262
	Mem254[a2 + 192<i64>:word64] = a5_237
	branch s5_116 == 32<i64> l0000000000017158
l0000000000017158:
	Mem259[a2 + 168<i64>:word64] = a0_217
	Mem260[a2 + 176<i64>:word64] = a0_217
	a5_262 = 0x11780<64>
l00000000000170AC:
	Mem265[&qwLoc0198:word32] = SLICE(s0_218, word32, 0)
	branch s5_116 == 31<i64> l0000000000017210
l0000000000017210:
	branch inet_ntop(2<i32>, &qwLoc0198, &bLoc0188, 16<i32>) == 0<64> l00000000000172E8
l0000000000017228:
	word64 a0_273 = __strdup(&bLoc0188)
	word64 a5_274 = CONVERT(Mem265[&qwLoc01B0:int32], int32, int64)
	word64 a4_275 = CONVERT(Mem265[&qwLoc01A8:int32], int32, int64)
	Mem276[a2 + 168<i64>:word64] = a0_273
	Mem283[&ptrLoc0190:word32] = SLICE(~a5_274 | a4_275, word32, 0)
	branch inet_ntop(2<i32>, &ptrLoc0190, &bLoc0188, 47<i32>) == 0<64> l0000000000017074
l0000000000017260:
	Mem288[a2 + 176<i64>:word64] = __strdup(&bLoc0188)
	a5_262 = 0x12660<64>
l000000000001716C:
	Mem295[a2 + 96<i64>:byte] = Mem292[a5_262:byte]
	Mem297[a2 + 97<i64>:byte] = Mem295[a5_262 + 1<i64>:byte]
l00000000000170B8:
	Mem304[&qwLoc0198:word32] = SLICE(s0_218, word32, 0) | 0x1000000<32>
	branch inet_ntop(2<i32>, &qwLoc0198, &bLoc0188, 16<i32>) == 0<64> l00000000000172E8
l00000000000172E8:
	a0_138 = Mem308[gp + -1920<i64>:word64]
l00000000000172C4:
	__fprintf_chk(a0_138, 1<i32>, 0x117B0<64>, SLICE(a3, int32, 0))
	abort()
l00000000000170DC:
	word64 a0_319 = __strdup(&bLoc0188)
	word64 a5_320 = CONVERT(Mem304[&qwLoc01B0:int32], int32, int64)
	Mem321[a2 + 168<i64>:word64] = a0_319
	word64 a4_803
	word64 a3_802
	word64 a4_801
	word64 a3_800
	Mem334[&ptrLoc0190:word32] = SLICE(fn00000000000182B4(CONVERT(CONVERT(fn00000000000182B4(~a5_320 | CONVERT(Mem321[&qwLoc01A8:int32], int32, int64), out a3_800, out a4_801), word64, word32) + -1<i32>, word32, int64), out a3_802, out a4_803), word32, 0)
	branch inet_ntop(2<i32>, &ptrLoc0190, &bLoc0188, 47<i32>) == 0<64> l0000000000017074
l0000000000017074:
	branch CONVERT(Mem341[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000016E20
l000000000001707C:
	fwrite(0x117F8<64>, SLICE(1<i64>, size_t, 0), SLICE(43<i64>, size_t, 0), Mem341[gp + -1920<i64>:word64])
l0000000000017120:
	Mem358[a2 + 176<i64>:word64] = __strdup(&bLoc0188)
	__snprintf_chk(a2 + 96<i64>, SLICE(64<i64>, size_t, 0), 1<i32>, SLICE(64<i64>, size_t, 0), 0x11828<64>, SLICE(a5, uint32, 0))
l000000000001717C:
	branch a3 << 0x31<u32> < 0<64> l0000000000017288
l0000000000017288:
	gp = fn0000000000017B40(ra, gp, CONVERT(Mem374[&qwLoc01B8:int32], int32, int64), a2 + 64<i64>, a2 + 72<i64>, a2 + 80<i64>, a2 + 88<i64>, a3 << 0x31<u32>, s5_116, a2, fa3, fa4, out s6_11)
l0000000000017184:
	branch (a3 & 1<i64>) != 0<64> l00000000000171C8
l00000000000171C8:
	word64 a0_436 = fn00000000000168E4(gp, 2<i64>, &qwLoc01B8)
	Mem448[s6_11 + 56<i64>:word64] = a0_436
	branch a0_436 != 0<64> l000000000001718C
l00000000000171DC:
	branch CONVERT(Mem448[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000016E20
l00000000000171E4:
	__sprintf_chk(&bLoc0158, 1<i32>, SLICE(250<i64>, size_t, 0), 0x11830<64>, a4)
	herror(&bLoc0158)
	a0_465 = -1<i64>
l000000000001718C:
	a0_465 = 0<i64>
l0000000000016E18:
	branch CONVERT(Mem343[gp + -2028<i64>:int32], int32, int64) == 0<64> l0000000000017054
l0000000000017054:
	__fprintf_chk(Mem343[gp + -1920<i64>:word64], 1<i32>, 0x117D8<64>, SLICE(a3, int32, 0))
	a0_465 = -1<i64>
l0000000000016E20:
	a0_465 = -1<i64>
l0000000000016E24:
	branch a5_7 != Mem480[gp + -1936<i64>:word64] l00000000000172D8
l00000000000172D8:
	__stack_chk_fail()
l0000000000016E30:
	a4Out = a5_7
	return a0_465
fn0000000000016D74_exit:


word64 fn000000000001730C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: a1 a2 a3 a6 ra s0 s1 sp
fn000000000001730C_entry:
	word64 qwLocB8
	char bLocA8
l000000000001730C:
	word64 a0_105
	word64 a4_7 = Mem5[gp + -1936<i64>:word64]
	branch a0 >u 128<i64> l00000000000173BC
l000000000001732C:
	Mem16[&qwLocB8:word64] = 0<64>
	word64 a5_20 = &qwLocB8
	word64 a4_21 = CONVERT(8<32> - SLICE(a0, word32, 0), word32, int64)
	branch a0 == 0<64> l000000000001736C
l0000000000017354:
	branch a0 <= 7<i64> l00000000000173C4
l00000000000173C4:
	Mem31[a5_20:byte] = 0xFF<8> << SLICE(a4_21, byte, 0)
l0000000000017358:
	Mem33[a5_20:byte] = 0xFF<8>
l000000000001735C:
	a0 = CONVERT(CONVERT(a0, word64, word32) + -8<i32>, word32, int64)
	a5_20 = a5_20 + 1<i64>
	a4_21 = CONVERT(CONVERT(a4_21, word64, word32) + 8<i32>, word32, int64)
	branch a0 > 0<64> l0000000000017354
l000000000001736C:
	branch inet_ntop(10<i32>, &qwLocB8, &bLocA8, 128<i32>) == 0<64> l00000000000173BC
l00000000000173BC:
	a0_105 = 0<i64>
l0000000000017384:
	memcpy(a1, &qwLocB8, SLICE(16<i64>, size_t, 0))
	a0_105 = __strdup(&bLocA8)
l000000000001739C:
	branch a4_7 != Mem60[gp + -1936<i64>:word64] l00000000000173D0
l00000000000173D0:
	__stack_chk_fail()
l00000000000173A8:
	return a0_105
fn000000000001730C_exit:


word64 fn00000000000173D4(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 sp
fn00000000000173D4_entry:
l00000000000173D4:
	word64 a0_101
	word64 s2_17 = CONVERT(Mem13[a0:byte], byte, word64)
	word64 s3_18 = CONVERT(Mem13[a0 + 1<i64>:byte], byte, word64)
	branch a1 == 128<i64> l00000000000174DC
l00000000000174DC:
	branch CONVERT(memcmp(a0, 0x10880<64>, SLICE(16<i64>, size_t, 0)), int32, uint64) == 0<64> l0000000000017538
l0000000000017538:
	return 0x11858<64>
l00000000000174F4:
	branch CONVERT(memcmp(a0, 0x10898<64>, SLICE(16<i64>, size_t, 0)), int32, uint64) != 0<64> l000000000001747C
l0000000000017508:
	a0_101 = 0x11870<64>
l0000000000017400:
	branch a1 > 95<i64> l0000000000017474
l0000000000017474:
l000000000001747C:
	branch CONVERT(memcmp(a0, 0x108B0<64>, SLICE(12<i64>, size_t, 0)), int32, uint64) == 0<64> l000000000001755C
l000000000001755C:
	return 0x11888<64>
l0000000000017490:
	branch CONVERT(memcmp(a0, 0x108C0<64>, SLICE(12<i64>, size_t, 0)), int32, uint64) == 0<64> l0000000000017514
l0000000000017514:
	return 0x118A0<64>
l00000000000174A4:
	branch CONVERT(memcmp(a0, 0x108D0<64>, SLICE(12<i64>, size_t, 0)), int32, uint64) != 0<64> l0000000000017408
l00000000000174B8:
	return 0x118B8<64>
l0000000000017408:
	word64 a5_87 = s2_17 << 8<u32> | s3_18
	branch (a5_87 & 0xFFFFE000<64>) == 0x2000<64> l0000000000017580
l0000000000017580:
	a0_101 = 0x118D8<64>
l0000000000017420:
	branch (s2_17 & 254<i64>) == 252<i64> l000000000001758C
l000000000001758C:
	a0_101 = 0x118E8<64>
l000000000001742C:
	branch (a5_87 & -64<i64>) == 65152<i64> l0000000000017598
l0000000000017598:
	a0_101 = 0x11900<64>
l000000000001743C:
	branch s2_17 == 255<i64> l00000000000175A4
l00000000000175A4:
	a0_101 = 0x11748<64>
l0000000000017444:
	a0_101 = 0x11710<64>
	branch (a5_87 & -2<i64>) == 8194<i64> l00000000000175B0
l00000000000175B0:
	a0_101 = 0x11918<64>
l0000000000017458:
	return a0_101
fn00000000000173D4_exit:


word64 fn00000000000175BC(word64 ra, word64 gp, word64 s1, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 fa3, word64 fa4, ptr64 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] fa3:[0..63] fa4:[0..63] gp:[0..63] ra:[0..63] s1:[0..63]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a4 a5
// Preserved: a3 a6 a7 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5
fn00000000000175BC_entry:
	word64 qwLoc0198
	word64 qwLoc0188
	word64 qwLoc0178
	char bLoc0168
l00000000000175BC:
	word64 a0_101
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	memset(a2, 0<i32>, SLICE(200<i64>, size_t, 0))
	word64 s0_11 = a2
	word64 s2_20 = a1
	word64 s6_279 = a3
	branch CONVERT(inet_pton(10<i32>, a0, &qwLoc0198), int32, uint64) <= 0<64> l00000000000177B4
l00000000000177B4:
	branch CONVERT(Mem39[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000017770
l00000000000177BC:
	__fprintf_chk(Mem39[gp + -1920<i64>:word64], 1<i32>, 0x11920<64>, a3)
	a0_101 = -1<i64>
l0000000000017628:
	Mem62[a2 + 8<i64>:word64] = fn00000000000163B0(gp, a4)
	word64 s3_276 = &bLoc0168
	branch inet_ntop(10<i32>, &qwLoc0198, &bLoc0168, 250<i32>) == 0<64> l0000000000017768
l0000000000017650:
	Mem70[a2:word64] = __strdup(&bLoc0168)
	word64 s5_71 = 128<i64>
	branch a1 > 128<i64> l00000000000177DC
l00000000000177DC:
	branch CONVERT(Mem70[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000017770
l00000000000177E4:
	__fprintf_chk(Mem70[gp + -1920<i64>:word64], 1<i32>, 0x11940<64>, SLICE(a3, int32, 0))
	a0_101 = -1<i64>
l0000000000017664:
	branch a1 < 0<64> l0000000000017868
l0000000000017868:
	s2_20 = 128<i64>
l0000000000017668:
	s5_71 = a1
l000000000001766C:
	Mem86[a2 + 160<i64>:word32] = SLICE(s5_71, word32, 0)
	word64 a0_90 = fn000000000001730C(gp, s5_71, &qwLoc0188)
	Mem92[a2 + 48<i64>:word64] = a0_90
	branch a0_90 == 0<64> l00000000000178F8
l00000000000178F8:
	branch CONVERT(Mem92[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000017770
l0000000000017900:
	__fprintf_chk(Mem92[gp + -1920<i64>:word64], 1<i32>, 0x11960<64>, SLICE(a3, int32, 0))
	a0_101 = -1<i64>
l0000000000017688:
	word64 s8_102 = &qwLoc0178
	word64 a5_103 = &qwLoc0198
	word64 s9_104 = &qwLoc0188
	word64 a2_105 = &qwLoc0178
	word64 a3_106 = &qwLoc0188
l000000000001769C:
	word64 a4_114 = CONVERT(Mem108[a5_103:byte], byte, word64) & CONVERT(Mem108[a3_106:byte], byte, word64)
	Mem116[a2_105:byte] = SLICE(a4_114, byte, 0)
	a5_103 = a5_103 + 1<i64>
	a3_106 = a3_106 + 1<i64>
	a2_105 = a2_105 + 1<i64>
	branch &qwLoc0188 != a5_103 l000000000001769C
l00000000000176BC:
	branch inet_ntop(10<i32>, &qwLoc0178, &bLoc0168, 250<i32>) == 0<64> l0000000000017768
l00000000000176D4:
	Mem130[a2 + 32<i64>:word64] = __strdup(&bLoc0168)
	Mem139[a2 + 16<i64>:word64] = fn00000000000163B0(gp, a4_114)
	Mem149[a2 + 184<i64>:word64] = fn00000000000173D4(&qwLoc0178, s2_20)
	Mem157[a2 + 24<i64>:word64] = fn0000000000018118(gp, &qwLoc0178, s5_71)
	branch s2_20 != 128<i64> l0000000000017870
l0000000000017870:
	Mem161[a2 + 168<i64>:word64] = __strdup(&bLoc0168)
l000000000001787C:
	s8_102 = s8_102 + 1<i64>
	Mem170[s8_102 + 4095<i64>:byte] = SLICE(~CONVERT(Mem163[s9_104:byte], byte, word64), byte, 0) | Mem163[s8_102:byte]
	s9_104 = s9_104 + 1<i64>
	branch &bLoc0168 != s8_102 l000000000001787C
l000000000001789C:
	branch inet_ntop(10<i32>, &qwLoc0178, &bLoc0168, 250<i32>) == 0<64> l0000000000017768
l0000000000017768:
	branch CONVERT(Mem181[gp + -2028<i64>:int32], int32, int64) == 0<64> l0000000000017804
l0000000000017804:
	fwrite(0x117F8<64>, SLICE(1<i64>, size_t, 0), SLICE(43<i64>, size_t, 0), Mem181[gp + -1920<i64>:word64])
	a0_101 = -1<i64>
l00000000000178B4:
	Mem194[a2 + 176<i64>:word64] = __strdup(&bLoc0168)
	branch CONVERT(0x80<32> - SLICE(s2_20, word32, 0), word32, int64) != 128<i64> l0000000000017728
l00000000000178D0:
l0000000000017714:
	word64 a5_200 = Mem157[a2 + 32<i64>:word64]
	Mem203[a2 + 168<i64>:word64] = a5_200
	Mem204[a2 + 176<i64>:word64] = a5_200
l0000000000017728:
l0000000000017740:
	snprintf(a2 + 96<i64>, SLICE(64<i64>, size_t, 0), 0x11990<64>, 0<32>)
	branch a3 << 0x31<u32> < 0<64> l00000000000178DC
l00000000000178DC:
	gp = fn0000000000017D10(ra, gp, s1, &qwLoc0198, a2 + 64<i64>, a2 + 72<i64>, a2 + 80<i64>, a2 + 88<i64>, a3 << 0x31<u32>, a3, &qwLoc0188, fa3, fa4, out s0_11, out s3_276, out s6_279)
l0000000000017758:
	branch (s6_279 & 1<i64>) != 0<64> l0000000000017824
l0000000000017824:
	word64 a0_288 = fn00000000000168E4(gp, 10<i64>, &qwLoc0198)
	Mem300[s0_11 + 56<i64>:word64] = a0_288
	branch a0_288 != 0<64> l0000000000017760
l0000000000017838:
	branch CONVERT(Mem300[gp + -2028<i64>:int32], int32, int64) != 0<64> l0000000000017770
l0000000000017840:
	__sprintf_chk(s3_276, 1<i32>, SLICE(250<i64>, size_t, 0), 0x11830<64>, a4)
	herror(s3_276)
l0000000000017770:
	a0_101 = -1<i64>
l0000000000017760:
	a0_101 = 0<i64>
l0000000000017774:
	branch a5_7 != Mem325[gp + -1936<i64>:word64] l0000000000017920
l0000000000017920:
	__stack_chk_fail()
l0000000000017780:
	a4Out = a5_7
	return a0_101
fn00000000000175BC_exit:


word64 fn0000000000017924(word64 gp, word64 a5, ptr64 & a1Out, ptr64 & a2Out, ptr64 & a3Out, ptr64 & a4Out, ptr64 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
//      fn0000000000017B40
//      fn0000000000017D10
// MayUse:  a5:[0..63] gp:[0..63]
// LiveOut: a0 a1 a2 a3 a4 a6
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn0000000000017924_entry:
	word64 a1
	word64 a2
	word64 a3
	word64 a4
	word64 a6
l0000000000017924:
	word64 s0_107
	branch Mem5[gp + -2016<i64>:word64] == 0<64> l00000000000179B8
l00000000000179B8:
	s0_107 = CONVERT(Mem27[gp + -2024<i64>:int32], int32, int64)
	branch s0_107 != 0<64> l000000000001795C
l00000000000179C0:
	word64 a0_32 = dlopen(0x12A38<64>, 1<i32>)
	Mem33[gp + 2080<i64>:word64] = a0_32
	branch a0_32 == 0<64> l0000000000017B14
l0000000000017B14:
	__snprintf_chk(gp + -800<i64>, SLICE(256<i64>, size_t, 0), 1<i32>, SLICE(256<i64>, size_t, 0), 0x12A58<64>, a5)
	Mem44[gp + 2072<i64>:word32] = 0xFFFFFFFF<32>
	a3 = 256<i64>
	a4 = 0x12A58<64>
	a2 = 1<i64>
	a1 = 256<i64>
	s0_107 = -1<i64>
l00000000000179DC:
	Mem49[gp + 2152<i64>:word64] = dlsym(a0_32, 0x12A78<64>)
	word64 a0_52 = dlsym(a0_32, 0x12A90<64>)
	Mem57[gp + 2144<i64>:word64] = a0_52
	word64 a0_58 = dlsym(a0_32, 0x12AA0<64>)
	Mem63[gp + 2136<i64>:word64] = a0_58
	word64 a0_64 = dlsym(a0_32, 0x12AC0<64>)
	Mem69[gp + 2120<i64>:word64] = a0_64
	word64 a0_70 = dlsym(a0_32, 0x12AD0<64>)
	Mem75[gp + 2112<i64>:word64] = a0_70
	word64 a0_76 = dlsym(a0_32, 0x12AE8<64>)
	Mem81[gp + 2104<i64>:word64] = a0_76
	word64 a0_82 = dlsym(a0_32, 0x12B00<64>)
	Mem87[gp + 2096<i64>:word64] = a0_82
	word64 a0_88 = dlsym(a0_32, 0x12B18<64>)
	Mem93[gp + 2088<i64>:word64] = a0_88
	Mem95[gp + 2128<i64>:word64] = dlsym(a0_32, 0x12B38<64>)
	a1 = 0x12B38<64>
	branch a0_52 == 0<64> l0000000000017ACC
l0000000000017AAC:
	branch a0_58 == 0<64> l0000000000017ACC
l0000000000017AB0:
	branch a0_64 == 0<64> l0000000000017ACC
l0000000000017AB4:
	branch a0_70 == 0<64> l0000000000017ACC
l0000000000017AB8:
	branch a0_76 == 0<64> l0000000000017ACC
l0000000000017ABC:
	branch a0_82 == 0<64> l0000000000017ACC
l0000000000017AC0:
	branch a0_88 == 0<64> l0000000000017ACC
l0000000000017ACC:
	a6 = Mem95[0x12B50<64>:word64]
	word64 a0_100 = Mem95[0x12B58<64>:word64]
	a1 = Mem95[0x12B60<64>:word64]
	a2 = Mem95[0x12B68<64>:word64]
	a3 = Mem95[0x12B70<64>:word64]
	a4 = CONVERT(Mem95[0x12B78<64>:int32], int32, int64)
	Mem108[gp + -800<i64>:word64] = a6
	Mem109[gp + -792<i64>:word64] = a0_100
	Mem110[gp + -784<i64>:word64] = a1
	Mem111[gp + -776<i64>:word64] = a2
	Mem112[gp + -768<i64>:word64] = a3
	Mem113[gp + -760<i64>:word32] = SLICE(a4, word32, 0)
	Mem114[gp + 2072<i64>:word32] = 0xFFFFFFFF<32>
	s0_107 = -1<i64>
l0000000000017AC4:
	Mem115[gp + 2072<i64>:word32] = 0<32>
l000000000001795C:
	branch CONVERT(Mem27[gp + -2028<i64>:int32], int32, int64) != 0<64> l000000000001796C
l0000000000017964:
	branch CONVERT(Mem27[gp + -800<i64>:byte], byte, word64) != 0<64> l00000000000179A8
l00000000000179A8:
	a1 = Mem27[gp + -1920<i64>:word64]
	fputs(gp + -800<i64>, a1)
l000000000001796C:
	s0_107 = CONVERT(Mem27[gp + -2024<i64>:int32], int32, int64)
l0000000000017970:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a6Out = a6
	return s0_107
fn0000000000017924_exit:


word64 fn0000000000017B40(word64 ra, word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 a5, word64 s5, word64 s6, word64 fa3, word64 fa4, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] a5:[0..63] fa3:[0..63] fa4:[0..63] gp:[0..63] ra:[0..63] s5:[0..63] s6:[0..63]
// LiveOut: gp s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 t1
// Preserved: sp
fn0000000000017B40_entry:
l0000000000017B40:
	word64 a1_35
	word64 a2_36
	word64 a3_509
	word64 a4_510
	word64 a6_511
	branch fn0000000000017924(gp, a5, out a1_35, out a2_36, out a3_509, out a4_510, out a6_511) == 0<64> l0000000000017BB0
l0000000000017BB0:
	word64 a3_43
	word64 a4_44
	word64 a0_42 = fn00000000000182B4(a0, out a3_43, out a4_44)
	word64 a5_46 = Mem21[gp + -1944<i64>:word64]
	word64 s0_49
	word64 s1_50
	word64 s2_51
	word64 s3_52
	word64 s4_53
	word64 ra_54
	word64 s5_55
	word64 s6_56
	word64 s7_57
	word64 a2_60
	word64 a3_61
	word64 a4_62
	word64 gp_64
	call a5_46 (retsize: 0;)
		uses: a0:a0_42,a1:a1_35,a2:a2_36,a3:a3_43,a4:a4_44,a5:a5_46,fa3:fa3_93,fa4:fa4_90,fa5:fa5_91,gp:gp,ra:ra,s0:a0,s1:a3,s2:a2,s3:a1,s4:a4,s5:s5,s6:s6,s7:a0_42,t1:t1_92
		defs: a2:a2_60,a3:a3_61,a4:a4_62,gp:gp_64,ra:ra_54,s0:s0_49,s1:s1_50,s2:s2_51,s3:s3_52,s4:s4_53,s5:s5_55,s6:s6_56,s7:s7_57
	word64 a5_70 = Mem21[gp_64 + -1952<i64>:word64]
	word64 a0_83
	word64 fa4_90
	word64 fa5_91
	word64 t1_92
	word64 fa3_93
	word64 gp_227
	word64 s1_213
	word64 s2_214
	word64 s3_215
	word64 s4_216
	word64 ra_217
	word64 s5_218
	word64 s6_219
	word64 s7_220
	word64 a2_223
	word64 a3_224
	word64 a4_225
	call a5_70 (retsize: 0;)
		uses: a0:1<i64>,a1:16<i64>,a2:a2_60,a3:a3_61,a4:a4_62,a5:a5_70,fa3:fa3_93,fa4:fa4_90,fa5:fa5_91,gp:gp_64,ra:ra_54,s0:s0_49,s1:s1_50,s2:s2_51,s3:s3_52,s4:s4_53,s5:s5_55,s6:s6_56,s7:s7_57,t1:t1_92
		defs: a0:a0_83,a2:a2_85,a3:a3_86,a4:a4_87,fa3:fa3_93,fa4:fa4_90,fa5:fa5_91,gp:gp_89,ra:ra_79,s1:s1_75,s2:s2_76,s3:s3_77,s4:s4_78,s5:s5_80,s6:s6_81,s7:s7_82,t1:t1_92
	word64 s0_212 = a0_83
	branch a0_83 == 0<64> l0000000000017C3C
l0000000000017BDC:
	word64 a5_96 = Mem21[gp_227 + -1992<i64>:word64]
	Mem99[a0_83 + 76<i64>:word32] = 1<32>
	word64 s0_102
	word64 s1_103
	word64 s2_104
	word64 s3_105
	word64 s4_106
	word64 ra_107
	word64 s5_108
	word64 s7_110
	word64 a0_111
	word64 a2_113
	word64 a3_114
	word64 a4_115
	word64 fa4_118
	word64 fa5_119
	word64 t1_120
	word64 fa3_121
	call a5_96 (retsize: 0;)
		uses: a0:a0_83,a1:CONVERT(SLICE(s7_82, word32, 0), word32, word64),a2:a2_85,a3:a3_86,a4:1<i64>,a5:a5_96,fa3:fa3_121,fa4:fa4_118,fa5:fa5_119,gp:gp_89,ra:ra_79,s0:a0_83,s1:s1_75,s2:s2_76,s3:s3_77,s4:s4_78,s5:s5_80,s6:s6_81,s7:s7_82,t1:t1_120
		defs: a0:a0_111,a2:a2_113,a3:a3_114,a4:a4_115,fa3:fa3_121,fa4:fa4_118,fa5:fa5_119,gp:gp_117,ra:ra_107,s0:s0_102,s1:s1_103,s2:s2_104,s3:s3_105,s4:s4_106,s5:s5_108,s7:s7_110,t1:t1_120
	branch a0_111 < 0<64> l0000000000017B84
l0000000000017BFC:
	word64 a5_124 = Mem99[gp + -1960<i64>:word64]
	word64 s0_128
	word64 s1_129
	word64 s2_130
	word64 s3_131
	word64 s4_132
	word64 ra_133
	word64 s5_134
	word64 s6_135
	word64 s7_136
	word64 a0_137
	word64 a1_138
	word64 a2_139
	word64 a3_140
	word64 a4_141
	word64 gp_143
	word64 fa4_144
	word64 fa5_145
	word64 t1_146
	word64 fa3_147
	call a5_124 (retsize: 0;)
		uses: a0:s0_102,a1:a0_111,a2:a2_113,a3:a3_114,a4:a4_115,a5:a5_124,fa3:fa3_147,fa4:fa4_144,fa5:fa5_145,gp:gp_117,ra:ra_107,s0:s0_102,s1:s1_103,s2:s2_104,s3:s3_105,s4:s4_106,s5:s5_108,s6:a0_111,s7:s7_110,t1:t1_146
		defs: a0:a0_137,a1:a1_138,a2:a2_139,a3:a3_140,a4:a4_141,fa3:fa3_147,fa4:fa4_144,fa5:fa5_145,gp:gp_143,ra:ra_133,s0:s0_128,s1:s1_129,s2:s2_130,s3:s3_131,s4:s4_132,s5:s5_134,s6:s6_135,s7:s7_136,t1:t1_146
	branch a0_137 == 0<64> l0000000000017C18
l0000000000017C10:
	Mem150[s3_131:word64] = __strdup(a0_137)
l0000000000017C18:
	word64 a5_153 = Mem152[gp_143 + -1968<i64>:word64]
	word64 s0_170
	word64 s1_171
	word64 s2_172
	word64 s3_173
	word64 s4_174
	word64 ra_175
	word64 s5_176
	word64 s6_177
	word64 s7_178
	word64 a0_179
	word64 a1_180
	word64 a2_181
	word64 a3_182
	word64 a4_183
	word64 gp_185
	word64 fa4_186
	word64 fa5_187
	word64 t1_188
	word64 fa3_189
	call a5_153 (retsize: 0;)
		uses: a0:s6_135,a1:a1_138,a2:a2_139,a3:a3_140,a4:a4_141,a5:a5_153,fa3:fa3_189,fa4:fa4_186,fa5:fa5_187,gp:gp_143,ra:ra_133,s0:s0_128,s1:s1_129,s2:s2_130,s3:s3_131,s4:s4_132,s5:s5_134,s6:s6_135,s7:s7_136,t1:t1_188
		defs: a0:a0_179,a1:a1_180,a2:a2_181,a3:a3_182,a4:a4_183,fa3:fa3_189,fa4:fa4_186,fa5:fa5_187,gp:gp_185,ra:ra_175,s0:s0_170,s1:s1_171,s2:s2_172,s3:s3_173,s4:s4_174,s5:s5_176,s6:s6_177,s7:s7_178,t1:t1_188
	branch a0_179 == 0<64> l0000000000017C30
l0000000000017C28:
	Mem192[s2_172:word64] = __strdup(a0_179)
l0000000000017C30:
	word64 a5_195 = Mem194[gp_185 + -1976<i64>:word64]
	word64 fa4_228
	word64 fa5_229
	word64 t1_230
	word64 fa3_231
	call a5_195 (retsize: 0;)
		uses: a0:s0_170,a1:a1_180,a2:a2_181,a3:a3_182,a4:a4_183,a5:a5_195,fa3:fa3_231,fa4:fa4_228,fa5:fa5_229,gp:gp_185,ra:ra_175,s0:s0_170,s1:s1_171,s2:s2_172,s3:s3_173,s4:s4_174,s5:s5_176,s6:s6_177,s7:s7_178,t1:t1_230
		defs: a2:a2_223,a3:a3_224,a4:a4_225,fa3:fa3_231,fa4:fa4_228,fa5:fa5_229,gp:gp_227,ra:ra_217,s0:s0_212,s1:s1_213,s2:s2_214,s3:s3_215,s4:s4_216,s5:s5_218,s6:s6_219,s7:s7_220,t1:t1_230
l0000000000017C3C:
	word64 a5_235 = Mem234[gp_227 + -1952<i64>:word64]
	word64 a4_265
	word64 fa4_268
	word64 fa5_269
	word64 t1_270
	word64 fa3_271
	word64 s7_260
	word64 s1_253
	word64 s2_254
	word64 s3_255
	word64 s4_256
	word64 ra_257
	word64 s5_258
	word64 s6_259
	word64 a0_261
	word64 a2_263
	word64 a3_264
	call a5_235 (retsize: 0;)
		uses: a0:2<i64>,a1:16<i64>,a2:a2_247,a3:a3_248,a4:a4_249,a5:a5_235,fa3:fa3_271,fa4:fa4_268,fa5:fa5_269,gp:gp_233,ra:ra_243,s0:s0_238,s1:s1_239,s2:s2_240,s3:s3_241,s4:s4_242,s5:s5_244,s6:s6_245,s7:s7_246,t1:t1_270
		defs: a0:a0_261,a2:a2_263,a3:a3_264,a4:a4_265,fa3:fa3_271,fa4:fa4_268,fa5:fa5_269,gp:gp_267,ra:ra_257,s1:s1_253,s2:s2_254,s3:s3_255,s4:s4_256,s5:s5_258,s6:s6_259,s7:s7_260,t1:t1_270
	word64 s0_273 = a0_261
	branch a0_261 == 0<64> l0000000000017CF4
l0000000000017CF4:
	word64 a5_274 = Mem234[gp + -1952<i64>:word64]
	word64 fa4_294
	word64 fa5_295
	word64 t1_296
	word64 fa3_297
	call a5_274 (retsize: 0;)
		uses: a0:6<i64>,a1:16<i64>,a2:a2_263,a3:a3_264,a4:a4_265,a5:a5_274,fa3:fa3_297,fa4:fa4_294,fa5:fa5_295,gp:gp_267,ra:ra_257,s0:a0_261,s1:s1_253,s2:s2_254,s3:s3_255,s4:s4_256,s5:s5_258,s6:s6_259,s7:s7_260,t1:t1_296
		defs: a0:a0_287,a2:a2_289,a3:a3_290,fa3:fa3_297,fa4:fa4_294,fa5:fa5_295,gp:gp_293,ra:ra_283,s1:s1_279,s2:s2_280,s3:s3_281,s4:s4_282,s5:s5_284,s6:s6_285,s7:s7_286,t1:t1_296
	s0_273 = a0_261
	branch a0_261 != 0<64> l0000000000017C54
l0000000000017D0C:
l0000000000017C54:
	word64 a5_302 = Mem234[gp + -1984<i64>:word64]
	Mem307[s0_273 + 76<i64>:word32] = 1<32>
	word64 sp_320
	word64 s0_321
	word64 s1_322
	word64 s4_325
	word64 a0_330
	word64 a3_333
	word64 a4_334
	word64 gp_336
	word64 fa4_337
	word64 fa5_338
	word64 t1_339
	word64 fa3_340
	word64 a1_331
	word64 a2_332
	word64 a5_335
	call a5_302 (retsize: 0;)
		uses: a0:a0_316,a1:CONVERT(SLICE(s7_304, word32, 0), word32, word64),a2:a2_317,a3:a3_318,a4:1<i64>,a5:a5_302,fa3:fa3_340,fa4:fa4_337,fa5:fa5_338,gp:gp_300,ra:ra_313,s0:s0_306,s1:s1_309,s2:s2_310,s3:s3_311,s4:s4_312,s5:s5_314,s6:s6_315,s7:s7_304,t1:t1_339
		defs: a0:a0_330,a1:a1_331,a2:a2_332,a3:a3_333,a4:a4_334,a5:a5_335,fa3:fa3_340,fa4:fa4_337,fa5:fa5_338,gp:gp_336,s0:s0_321,s1:s1_322,s4:s4_325,sp:sp_320,t1:t1_339
	branch a0_330 == 0<64> l0000000000017C94
l0000000000017C74:
	word64 a0_343 = Mem307[a0_330 + 32<i64>:word64]
	branch a0_343 == 0<64> l0000000000017C84
l0000000000017C7C:
	Mem345[s1_322:word64] = __strdup(a0_343)
l0000000000017C84:
	a5_335 = CONVERT(Mem347[a0_330 + 52<i64>:real32] == 0.0F, bool, word64)
	branch a5_335 == 0<64> l0000000000017CC8
l0000000000017CC8:
	__asprintf_chk(s4_325, 1<i32>, 0x12B80<64>, fa3, fa4)
	a2_332 = 0x12B80<64>
	a1_331 = 1<i64>
l0000000000017C94:
	word64 s6_398
	word64 gp_406
	word64 fa4_407
	word64 fa5_408
	word64 t1_409
	word64 fa3_410
	call Mem368[gp_336 + -1976<i64>:word64] (retsize: 0;)
		uses: a0:s0_321,a1:a1_382,a2:a2_384,a3:a3_333,a4:a4_334,a5:a5_389,fa3:fa3_410,fa4:fa4_407,fa5:fa5_408,gp:gp_336,ra:Mem368[sp_320 + 72<i64>:word64],s0:Mem368[sp_320 + 64<i64>:word64],s1:Mem368[sp_320 + 56<i64>:word64],s2:Mem368[sp_320 + 48<i64>:word64],s3:Mem368[sp_320 + 40<i64>:word64],s4:Mem368[sp_320 + 32<i64>:word64],s5:Mem368[sp_320 + 24<i64>:word64],s6:Mem368[sp_320 + 16<i64>:word64],s7:Mem368[sp_320 + 8<i64>:word64],t1:t1_409
		defs: fa3:fa3_410,fa4:fa4_407,fa5:fa5_408,gp:gp_406,s6:s6_398,t1:t1_409
	s6Out = s6_398
	return gp_406
l0000000000017B84:
	s6Out = s6
	return gp
fn0000000000017B40_exit:


word64 fn0000000000017D10(word64 ra, word64 gp, word64 s1, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 a5, word64 s6, word64 s7, word64 fa3, word64 fa4, ptr64 & s0Out, ptr64 & s3Out, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] a5:[0..63] fa3:[0..63] fa4:[0..63] gp:[0..63] ra:[0..63] s1:[0..63] s6:[0..63] s7:[0..63]
// LiveOut: gp s0 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 t1
// Preserved: sp
fn0000000000017D10_entry:
	word64 s0
	word64 s3
l0000000000017D10:
	word64 a1_35
	word64 a2_36
	word64 a3_37
	word64 a4_38
	word64 a6_515
	word64 a0_34 = fn0000000000017924(gp, a5, out a1_35, out a2_36, out a3_37, out a4_38, out a6_515)
	branch a0_34 == 0<64> l0000000000017D80
l0000000000017D80:
	word64 a5_41 = Mem21[gp + -1944<i64>:word64]
	word64 s0_43
	word64 s2_44
	word64 s3_45
	word64 s4_46
	word64 s5_47
	word64 ra_48
	word64 s1_49
	word64 s6_50
	word64 s7_51
	word64 a2_54
	word64 a3_55
	word64 a4_56
	word64 gp_58
	call a5_41 (retsize: 0;)
		uses: a0:a0_34,a1:a1_35,a2:a2_36,a3:a3_37,a4:a4_38,a5:a5_41,fa3:fa3_88,fa4:fa4_85,fa5:fa5_86,gp:gp,ra:ra,s0:a0,s1:s1,s2:a3,s3:a2,s4:a1,s5:a4,s6:s6,s7:s7,t1:t1_87
		defs: a2:a2_54,a3:a3_55,a4:a4_56,gp:gp_58,ra:ra_48,s0:s0_43,s1:s1_49,s2:s2_44,s3:s3_45,s4:s4_46,s5:s5_47,s6:s6_50,s7:s7_51
	word64 a5_64 = Mem21[gp_58 + -1952<i64>:word64]
	word64 a0_77
	word64 fa4_85
	word64 fa5_86
	word64 t1_87
	word64 fa3_88
	word64 gp_227
	word64 s0_212
	word64 s2_213
	word64 s3_214
	word64 s4_215
	word64 s5_216
	word64 ra_217
	word64 s6_219
	word64 s7_220
	word64 a2_223
	word64 a3_224
	word64 a4_225
	call a5_64 (retsize: 0;)
		uses: a0:12<i64>,a1:16<i64>,a2:a2_54,a3:a3_55,a4:a4_56,a5:a5_64,fa3:fa3_88,fa4:fa4_85,fa5:fa5_86,gp:gp_58,ra:ra_48,s0:s0_43,s1:s1_49,s2:s2_44,s3:s3_45,s4:s4_46,s5:s5_47,s6:s6_50,s7:s7_51,t1:t1_87
		defs: a0:a0_77,a2:a2_79,a3:a3_80,a4:a4_81,fa3:fa3_88,fa4:fa4_85,fa5:fa5_86,gp:gp_83,ra:ra_73,s0:s0_68,s2:s2_69,s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_75,s7:s7_76,t1:t1_87
	word64 s1_218 = a0_77
	branch a0_77 == 0<64> l0000000000017E18
l0000000000017DA0:
	word64 a4_90 = CONVERT(Mem21[s0_212 + 4<i64>:uint32], uint32, word64)
	word64 a5_91 = CONVERT(Mem21[s0_212 + 12<i64>:uint32], uint32, word64)
	word64 a1_92 = CONVERT(Mem21[s0_212:uint32], uint32, word64)
	word64 a2_93 = CONVERT(Mem21[s0_212 + 8<i64>:uint32], uint32, word64)
	word64 a3_94 = Mem21[gp_227 + -2000<i64>:word64]
	Mem98[a0_77 + 76<i64>:word32] = 1<32>
	word64 s0_102
	word64 s2_103
	word64 s3_104
	word64 s4_105
	word64 s5_106
	word64 ra_107
	word64 s1_108
	word64 s6_109
	word64 a0_111
	word64 a2_113
	word64 a3_114
	word64 a4_115
	word64 fa4_119
	word64 fa5_120
	word64 t1_121
	word64 fa3_122
	call a3_94 (retsize: 0;)
		uses: a0:a0_77,a1:a4_90 << 0x20<u32> | a1_92,a2:a5_91 << 0x20<u32> | a2_93,a3:a3_94,a4:a4_90 << 0x20<u32>,a5:a5_91 << 0x20<u32>,a6:1<i64>,fa3:fa3_122,fa4:fa4_119,fa5:fa5_120,gp:gp_83,ra:ra_73,s0:s0_68,s1:a0_77,s2:s2_69,s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_75,s7:s7_76,t1:t1_121
		defs: a0:a0_111,a2:a2_113,a3:a3_114,a4:a4_115,fa3:fa3_122,fa4:fa4_119,fa5:fa5_120,gp:gp_117,ra:ra_107,s0:s0_102,s1:s1_108,s2:s2_103,s3:s3_104,s4:s4_105,s5:s5_106,s6:s6_109,t1:t1_121
	branch a0_111 < 0<64> l0000000000017D54
l0000000000017DD8:
	word64 a5_124 = Mem98[gp + -1960<i64>:word64]
	word64 s0_128
	word64 s2_129
	word64 s3_130
	word64 s4_131
	word64 s5_132
	word64 ra_133
	word64 s1_134
	word64 s6_135
	word64 s7_136
	word64 a0_137
	word64 a1_138
	word64 a2_139
	word64 a3_140
	word64 a4_141
	word64 gp_143
	word64 fa4_145
	word64 fa5_146
	word64 t1_147
	word64 fa3_148
	call a5_124 (retsize: 0;)
		uses: a0:s1_108,a1:a0_111,a2:a2_113,a3:a3_114,a4:a4_115,a5:a5_124,fa3:fa3_148,fa4:fa4_145,fa5:fa5_146,gp:gp_117,ra:ra_107,s0:s0_102,s1:s1_108,s2:s2_103,s3:s3_104,s4:s4_105,s5:s5_106,s6:s6_109,s7:a0_111,t1:t1_147
		defs: a0:a0_137,a1:a1_138,a2:a2_139,a3:a3_140,a4:a4_141,fa3:fa3_148,fa4:fa4_145,fa5:fa5_146,gp:gp_143,ra:ra_133,s0:s0_128,s1:s1_134,s2:s2_129,s3:s3_130,s4:s4_131,s5:s5_132,s6:s6_135,s7:s7_136,t1:t1_147
	branch a0_137 == 0<64> l0000000000017DF4
l0000000000017DEC:
	Mem150[s4_131:word64] = __strdup(a0_137)
l0000000000017DF4:
	word64 a5_153 = Mem152[gp_143 + -1968<i64>:word64]
	word64 s0_170
	word64 s2_171
	word64 s3_172
	word64 s4_173
	word64 s5_174
	word64 ra_175
	word64 s1_176
	word64 s6_177
	word64 s7_178
	word64 a0_179
	word64 a1_180
	word64 a2_181
	word64 a3_182
	word64 a4_183
	word64 gp_185
	word64 fa4_187
	word64 fa5_188
	word64 t1_189
	word64 fa3_190
	call a5_153 (retsize: 0;)
		uses: a0:s7_136,a1:a1_138,a2:a2_139,a3:a3_140,a4:a4_141,a5:a5_153,fa3:fa3_190,fa4:fa4_187,fa5:fa5_188,gp:gp_143,ra:ra_133,s0:s0_128,s1:s1_134,s2:s2_129,s3:s3_130,s4:s4_131,s5:s5_132,s6:s6_135,s7:s7_136,t1:t1_189
		defs: a0:a0_179,a1:a1_180,a2:a2_181,a3:a3_182,a4:a4_183,fa3:fa3_190,fa4:fa4_187,fa5:fa5_188,gp:gp_185,ra:ra_175,s0:s0_170,s1:s1_176,s2:s2_171,s3:s3_172,s4:s4_173,s5:s5_174,s6:s6_177,s7:s7_178,t1:t1_189
	branch a0_179 == 0<64> l0000000000017E0C
l0000000000017E04:
	Mem192[s3_172:word64] = __strdup(a0_179)
l0000000000017E0C:
	word64 a5_195 = Mem194[gp_185 + -1976<i64>:word64]
	word64 fa4_229
	word64 fa5_230
	word64 t1_231
	word64 fa3_232
	call a5_195 (retsize: 0;)
		uses: a0:s1_176,a1:a1_180,a2:a2_181,a3:a3_182,a4:a4_183,a5:a5_195,fa3:fa3_232,fa4:fa4_229,fa5:fa5_230,gp:gp_185,ra:ra_175,s0:s0_170,s1:s1_176,s2:s2_171,s3:s3_172,s4:s4_173,s5:s5_174,s6:s6_177,s7:s7_178,t1:t1_231
		defs: a2:a2_223,a3:a3_224,a4:a4_225,fa3:fa3_232,fa4:fa4_229,fa5:fa5_230,gp:gp_227,ra:ra_217,s0:s0_212,s1:s1_218,s2:s2_213,s3:s3_214,s4:s4_215,s5:s5_216,s6:s6_219,s7:s7_220,t1:t1_231
l0000000000017E18:
	word64 a5_235 = Mem234[gp_227 + -1952<i64>:word64]
	word64 a2_263
	word64 a3_264
	word64 a4_265
	word64 fa4_269
	word64 fa5_270
	word64 t1_271
	word64 fa3_272
	word64 s0_252
	word64 s2_253
	word64 s3_254
	word64 s4_255
	word64 s5_256
	word64 ra_257
	word64 s6_259
	word64 s7_260
	word64 a0_261
	call a5_235 (retsize: 0;)
		uses: a0:30<i64>,a1:16<i64>,a2:a2_247,a3:a3_248,a4:a4_249,a5:a5_235,fa3:fa3_272,fa4:fa4_269,fa5:fa5_270,gp:gp_233,ra:ra_243,s0:s0_238,s1:s1_244,s2:s2_239,s3:s3_240,s4:s4_241,s5:s5_242,s6:s6_245,s7:s7_246,t1:t1_271
		defs: a0:a0_261,a2:a2_263,a3:a3_264,a4:a4_265,fa3:fa3_272,fa4:fa4_269,fa5:fa5_270,gp:gp_267,ra:ra_257,s0:s0_252,s2:s2_253,s3:s3_254,s4:s4_255,s5:s5_256,s6:s6_259,s7:s7_260,t1:t1_271
	word64 s1_273 = a0_261
	branch a0_261 == 0<64> l0000000000017EE8
l0000000000017EE8:
	word64 a5_274 = Mem234[gp + -1952<i64>:word64]
	word64 fa4_295
	word64 fa5_296
	word64 t1_297
	word64 fa3_298
	call a5_274 (retsize: 0;)
		uses: a0:31<i64>,a1:16<i64>,a2:a2_263,a3:a3_264,a4:a4_265,a5:a5_274,fa3:fa3_298,fa4:fa4_295,fa5:fa5_296,gp:gp_267,ra:ra_257,s0:s0_252,s1:a0_261,s2:s2_253,s3:s3_254,s4:s4_255,s5:s5_256,s6:s6_259,s7:s7_260,t1:t1_297
		defs: a0:a0_287,fa3:fa3_298,fa4:fa4_295,fa5:fa5_296,gp:gp_293,ra:ra_283,s0:s0_278,s2:s2_279,s3:s3_280,s4:s4_281,s5:s5_282,s6:s6_285,s7:s7_286,t1:t1_297
	s1_273 = a0_261
	branch a0_261 != 0<64> l0000000000017E30
l0000000000017F00:
l0000000000017E30:
	word64 a4_302 = CONVERT(Mem234[s0_252 + 4<i64>:uint32], uint32, word64)
	word64 a5_303 = CONVERT(Mem234[s0_252 + 12<i64>:uint32], uint32, word64)
	word64 a1_304 = CONVERT(Mem234[s0_252:uint32], uint32, word64)
	word64 a2_305 = CONVERT(Mem234[s0_252 + 8<i64>:uint32], uint32, word64)
	word64 a3_307 = Mem234[gp + -2008<i64>:word64]
	Mem312[s1_273 + 76<i64>:word32] = 1<32>
	word64 sp_324
	word64 s2_326
	word64 s5_329
	word64 s1_331
	word64 a0_334
	word64 a3_337
	word64 a4_338
	word64 gp_340
	word64 fa4_342
	word64 fa5_343
	word64 t1_344
	word64 fa3_345
	word64 a1_335
	word64 a2_336
	word64 a5_339
	call a3_307 (retsize: 0;)
		uses: a0:a0_322,a1:a4_302 << 0x20<u32> | a1_304,a2:a5_303 << 0x20<u32> | a2_305,a3:a3_307,a4:a4_302 << 0x20<u32>,a5:a5_303 << 0x20<u32>,a6:1<i64>,fa3:fa3_345,fa4:fa4_342,fa5:fa5_343,gp:gp_306,ra:ra_319,s0:s0_300,s1:s1_311,s2:s2_315,s3:s3_316,s4:s4_317,s5:s5_318,s6:s6_320,s7:s7_321,t1:t1_344
		defs: a0:a0_334,a1:a1_335,a2:a2_336,a3:a3_337,a4:a4_338,a5:a5_339,fa3:fa3_345,fa4:fa4_342,fa5:fa5_343,gp:gp_340,s1:s1_331,s2:s2_326,s5:s5_329,sp:sp_324,t1:t1_344
	branch a0_334 == 0<64> l0000000000017E88
l0000000000017E68:
	word64 a0_347 = Mem312[a0_334 + 32<i64>:word64]
	branch a0_347 == 0<64> l0000000000017E78
l0000000000017E70:
	Mem349[s2_326:word64] = __strdup(a0_347)
l0000000000017E78:
	a5_339 = CONVERT(Mem351[a0_334 + 52<i64>:real32] == 0.0F, bool, word64)
	branch a5_339 == 0<64> l0000000000017EBC
l0000000000017EBC:
	__asprintf_chk(s5_329, 1<i32>, 0x12B80<64>, fa3, fa4)
	a2_336 = 0x12B80<64>
	a1_335 = 1<i64>
l0000000000017E88:
	word64 s0_395
	word64 s3_397
	word64 s6_402
	word64 gp_410
	word64 fa4_412
	word64 fa5_413
	word64 t1_414
	word64 fa3_415
	call Mem372[gp_340 + -1976<i64>:word64] (retsize: 0;)
		uses: a0:s1_331,a1:a1_386,a2:a2_388,a3:a3_337,a4:a4_338,a5:a5_393,fa3:fa3_415,fa4:fa4_412,fa5:fa5_413,gp:gp_340,ra:Mem372[sp_324 + 72<i64>:word64],s0:Mem372[sp_324 + 64<i64>:word64],s1:Mem372[sp_324 + 56<i64>:word64],s2:Mem372[sp_324 + 48<i64>:word64],s3:Mem372[sp_324 + 40<i64>:word64],s4:Mem372[sp_324 + 32<i64>:word64],s5:Mem372[sp_324 + 24<i64>:word64],s6:Mem372[sp_324 + 16<i64>:word64],s7:Mem372[sp_324 + 8<i64>:word64],t1:t1_414
		defs: fa3:fa3_415,fa4:fa4_412,fa5:fa5_413,gp:gp_410,s0:s0_395,s3:s3_397,s6:s6_402,t1:t1_414
	s0Out = s0_395
	s3Out = s3_397
	s6Out = s6_402
	return gp_410
l0000000000017D54:
	s0Out = s0
	s3Out = s3
	s6Out = s6
	return gp
fn0000000000017D10_exit:


word64 fn0000000000017F04(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 a5, word64 a6, word64 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 t1 t3
// Preserved: a7 ra s0 s1 s2 s3 s4 s5 s6 sp
fn0000000000017F04_entry:
	char * ptrLoc50
l0000000000017F04:
	word64 a0_142
	word64 a0_116
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	Mem29[&ptrLoc50:word64] = 0<64>
	word64 a3_225
	word64 a4_226
	fn00000000000182B4(a0, out a3_225, out a4_226)
	branch a1 == 32<i64> l0000000000018048
l0000000000018048:
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12B88<64>, SLICE(a3, uint32, 0), SLICE(a4, uint32, 0), SLICE(a5, uint32, 0), SLICE(a6, uint32, 0)), int32, uint64)
l0000000000017F60:
	branch a1 == 24<i64> l0000000000018070
l0000000000018070:
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12BA8<64>, SLICE(a3, uint32, 0), SLICE(a4, uint32, 0), SLICE(a5, uint32, 0)), int32, uint64)
l0000000000017F68:
	branch a1 == 16<i64> l00000000000180D8
l00000000000180D8:
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12BC0<64>, SLICE(a3, uint32, 0), SLICE(a4, uint32, 0)), int32, uint64)
l0000000000017F70:
	branch a1 == 8<i64> l00000000000180F8
l00000000000180F8:
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12BD8<64>, SLICE(a3, uint32, 0)), int32, uint64)
l0000000000017F78:
	branch a1 >u 24<i64> l0000000000017FBC
l0000000000017FBC:
	word64 a3_227
	word64 a4_228
	fn00000000000182B4(a2, out a3_227, out a4_228)
	word64 a4_230
	word64 a3_229
	fn00000000000182B4(a3, out a3_229, out a4_230)
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12BF0<64>, SLICE(a3, uint32, 0), SLICE(a4, uint32, 0), SLICE(a5, uint32, 0), SLICE(a6, uint32, 0), SLICE(a7, uint32, 0)), int32, uint64)
l0000000000017F7C:
	branch a1 >u 16<i64> l0000000000018094
l0000000000018094:
	word64 a3_231
	word64 a4_232
	fn00000000000182B4(a2, out a3_231, out a4_232)
	word64 a3_233
	word64 a4_234
	fn00000000000182B4(a3, out a3_233, out a4_234)
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12C10<64>, SLICE(a3, uint32, 0), SLICE(a4, uint32, 0), SLICE(a5, uint32, 0), SLICE(a6, uint32, 0)), int32, uint64)
l0000000000017F80:
	branch a1 >u 8<i64> l0000000000018008
l0000000000018008:
	word64 a3_235
	word64 a4_236
	fn00000000000182B4(a2, out a3_235, out a4_236)
	word64 a3_237
	word64 a4_238
	fn00000000000182B4(a3, out a3_237, out a4_238)
	a0_116 = CONVERT(__asprintf_chk(&ptrLoc50, 1<i32>, 0x12C30<64>, SLICE(a3, uint32, 0), SLICE(a4, uint32, 0), SLICE(a5, uint32, 0)), int32, uint64)
l0000000000017FF8:
	branch a0_116 == -1<i64> l0000000000017F84
l0000000000018000:
	a0_142 = Mem29[&ptrLoc50:word64]
l0000000000017F84:
	a0_142 = 0<i64>
l0000000000017F88:
	branch a5_7 != Mem29[gp + -1936<i64>:word64] l0000000000018114
l0000000000018114:
	__stack_chk_fail()
l0000000000017F94:
	return a0_142
fn0000000000017F04_exit:


word64 fn0000000000018118(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a4 a5 t4
// Preserved: a1 a2 a3 a6 a7 ra s0 sp t1 t3 t5 t6
fn0000000000018118_entry:
	ptr64 fp
	char bLoc0118
l0000000000018118:
	word64 a0_13
	word64 a5_7 = Mem5[gp + -1936<i64>:word64]
	word64 t4_108 = a1 & 3<i64>
	branch (a1 & 3<i64>) != 0<64> l00000000000182A8
l00000000000182A8:
	a0_13 = 0<i64>
l0000000000018134:
	word64 t5_16 = CONVERT(SLICE(a1, word32, 0) >>u 3<i32>, word32, int64)
	branch (a1 & 7<i64>) == 4<i64> l0000000000018264
l0000000000018264:
	word64 a5_24 = CONVERT(Mem12[a0 + CONVERT((CONVERT(a1, word64, word32) + 4<i64> >>u 3<i32>) + -1<i32>, word32, word64):byte], byte, word64)
	word64 a4_27 = (a5_24 >>u 4<u32>) + 87<i64>
	branch a5_24 >>u 4<u32> >u 9<i64> l0000000000018294
l0000000000018290:
	a4_27 = (a5_24 >>u 4<u32>) + 48<i64>
l0000000000018294:
	Mem32[&bLoc0118:byte] = SLICE(a4_27, byte, 0)
	t4_108 = 2<i64>
l0000000000018144:
	branch t5_16 == 0<64> l00000000000181FC
l0000000000018148:
	word64 a1_37 = CONVERT(CONVERT(t5_16, word64, word32) + -1<i32>, word32, int64)
	word64 a4_39 = t4_108
l0000000000018190:
	word64 a5_49 = CONVERT(Mem48[a0 + CONVERT(SLICE(a1_37, word32, 0), word32, word64):byte], byte, word64)
	word64 a3_51 = CONVERT(CONVERT(a4_39, word64, word32) + 1<i32>, word32, int64)
	word64 a6_53 = (a5_49 & 15<i64>) + 87<i64>
	branch (a5_49 & 15<i64>) >u 9<i64> l00000000000181B4
l00000000000181B0:
	a6_53 = (a5_49 & 15<i64>) + 48<i64>
l00000000000181B4:
	Mem67[fp + -16<i64> + CONVERT(SLICE(a4_39, word32, 0), word32, word64) + 3832<i64>:byte] = SLICE(a6_53, byte, 0)
	Mem73[fp + -16<i64> + CONVERT(SLICE(a3_51, word32, 0), word32, word64) + 3832<i64>:byte] = 0x2E<8>
	word64 a2_74 = CONVERT(CONVERT(a4_39, word64, word32) + 2<i32>, word32, int64)
	word64 a3_75 = CONVERT(CONVERT(a4_39, word64, word32) + 3<i32>, word32, int64)
	word64 a6_76 = (a5_49 >>u 4<u32>) + 48<i64>
	branch a5_49 >>u 4<u32> <=u 9<i64> l0000000000018160
l00000000000181EC:
	a6_76 = (a5_49 >>u 4<u32>) + 87<i64>
l0000000000018160:
	Mem89[fp + -16<i64> + CONVERT(SLICE(a2_74, word32, 0), word32, word64) + 3832<i64>:byte] = SLICE(a6_76, byte, 0)
	Mem92[fp + -16<i64> + CONVERT(SLICE(a3_75, word32, 0), word32, word64) + 3832<i64>:byte] = 0x2E<8>
	a1_37 = CONVERT(CONVERT(a1_37, word64, word32) + -1<i32>, word32, int64)
	a4_39 = CONVERT(CONVERT(a4_39, word64, word32) + 4<i32>, word32, int64)
	branch a1_37 == -1<i64> l00000000000181F4
l00000000000181F4:
	t4_108 = CONVERT(CONVERT(t4_108, word64, word32) + CONVERT(SLICE(t5_16, word32, 0) << 2<64>, word32, int64), word32, int64)
l00000000000181FC:
	word64 t4_116 = &bLoc0118 + CONVERT(SLICE(t4_108, word32, 0), word32, word64)
	Mem119[t4_116 + 4<i64>:word16] = 0x7261<16>
	Mem122[t4_116:word16] = 0x7069<16>
	Mem125[t4_116 + 6<i64>:word16] = 0x6170<16>
	Mem128[t4_116 + 2<i64>:word16] = 0x2E36<16>
	Mem129[t4_116 + 8<i64>:word16] = 0x2E<16>
	a0_13 = __strdup(&bLoc0118)
l0000000000018248:
	branch a5_7 != Mem132[gp + -1936<i64>:word64] l00000000000182B0
l00000000000182B0:
	__stack_chk_fail()
l0000000000018254:
	return a0_13
fn0000000000018118_exit:


word64 fn00000000000182B4(word64 a0, ptr64 & a3Out, ptr64 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000166F4
//      fn0000000000016830
//      fn0000000000016B68
//      fn0000000000016D74
//      fn0000000000017B40
//      fn0000000000017F04
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
fn00000000000182B4_entry:
l00000000000182B4:
	word64 a3_6 = CONVERT(SLICE(a0, word32, 0) >>u 24<i32>, word32, int64) | CONVERT(SLICE(a0, word32, 0) << 0x18<64>, word32, int64)
	a3Out = a3_6
	word64 a4_11 = CONVERT((SLICE(a0, word32, 0) & 0xFF0000<32>) >> 8<u32>, word32, int64)
	a4Out = a4_11
	return a3_6 | a4_11 | CONVERT((SLICE(a0, word32, 0) & 0xFF00<32>) << 8<64>, word32, int64)
fn00000000000182B4_exit:


void fn00000000000182E8(word64 ra, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] ra:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a5
// Preserved: ra s0 s1 s2 s3 s4 s5 sp
fn00000000000182E8_entry:
l00000000000182E8:
	word64 s2_12 = 0x0000000000019E20<p64> - 0x0000000000019E18<p64>
	word64 s0_31 = 0x0000000000019E18<p64>
	word64 s2_23 = s2_12 >> 3<u32>
	branch s2_12 >> 3<u32> == 0<64> l0000000000018354
l0000000000018324:
	word64 s5_25 = a0
	word64 s4_27 = a1
	word64 s3_29 = a2
	word64 s1_30 = 0<i64>
l0000000000018334:
	word64 s0_46
	word64 a5_56
	call Mem22[s0_31:word64] (retsize: 0;)
		uses: a0:s5_38,a1:s4_36,a2:s3_34,a5:a5_56,ra:ra_43,s0:s0_31,s1:s1_40 + 1<i64>,s2:s2_42,s3:s3_34,s4:s4_36,s5:s5_38
		defs: a5:a5_56,ra:ra_48,s0:s0_46,s1:s1_49,s2:s2_47,s3:s3_50,s4:s4_51,s5:s5_52
	s0_31 = s0_46 + 8<i64>
	branch s2_23 != s1_30 l0000000000018334
l0000000000018354:
	return
fn00000000000182E8_exit:


void fn0000000000018378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000000000018378_entry:
l0000000000018378:
	return
fn0000000000018378_exit:


